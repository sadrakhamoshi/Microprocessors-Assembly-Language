
AVRASM ver. 2.1.30  D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm Thu Jan 27 07:37:42 2022

D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1089): warning: Register r4 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1090): warning: Register r6 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1091): warning: Register r7 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1092): warning: Register r8 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1093): warning: Register r9 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1094): warning: Register r11 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1095): warning: Register r10 already defined by the .DEF directive
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1096): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _operation0=R5
                 	.DEF _operation1=R4
                 	.DEF _operation_enter=R6
                 	.DEF _operation_enter_msb=R7
                 	.DEF _equal_enter=R8
                 	.DEF _equal_enter_msb=R9
                 	.DEF __lcd_x=R11
                 	.DEF __lcd_y=R10
                 	.DEF __lcd_maxx=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0049 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002a 2b2a
00002b 0000      	.DB  0x2A,0x2B,0x0,0x0
00002c 0001      	.DB  0x1,0x0
                 
                 _0xB:
00002d 0000
00002e 3f80      	.DB  0x0,0x0,0x80,0x3F
                 _0x0:
00002f 2e25
000030 6632
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1135): warning: .cseg .db misalignment - padding zero byte
000031 0000      	.DB  0x25,0x2E,0x32,0x66,0x0
                 _0x2000003:
000032 c080      	.DB  0x80,0xC0
                 _0x2020060:
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1139): warning: .cseg .db misalignment - padding zero byte
000033 0001      	.DB  0x1
                 _0x2020000:
000034 4e2d
000035 4e41
000036 4900
000037 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1142): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 _0x2040000:
000039 4e2d
00003a 4e41
D:\university\4001\rizpar\hw6\question2\software\Debug\List\program.asm(1144): warning: .cseg .db misalignment - padding zero byte
00003b 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
00003c 0006      	.DW  0x06
00003d 0004      	.DW  0x04
00003e 0054      	.DW  __REG_VARS*2
                 
00003f 0004      	.DW  0x04
000040 0264      	.DW  _num1
000041 005a      	.DW  _0xB*2
                 
000042 0002      	.DW  0x02
000043 028c      	.DW  __base_y_G100
000044 0064      	.DW  _0x2000003*2
                 
000045 0001      	.DW  0x01
000046 0290      	.DW  __seed_G101
000047 0066      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000048 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000049 94f8      	CLI
00004a 27ee      	CLR  R30
00004b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004c e0f1      	LDI  R31,1
00004d bffb      	OUT  GICR,R31
00004e bfeb      	OUT  GICR,R30
00004f bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000050 e08d      	LDI  R24,(14-2)+1
000051 e0a2      	LDI  R26,2
000052 27bb      	CLR  R27
                 __CLEAR_REG:
000053 93ed      	ST   X+,R30
000054 958a      	DEC  R24
000055 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000056 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000057 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000058 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000059 93ed      	ST   X+,R30
00005a 9701      	SBIW R24,1
00005b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005c e7e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005e 9185      	LPM  R24,Z+
00005f 9195      	LPM  R25,Z+
000060 9700      	SBIW R24,0
000061 f061      	BREQ __GLOBAL_INI_END
000062 91a5      	LPM  R26,Z+
000063 91b5      	LPM  R27,Z+
000064 9005      	LPM  R0,Z+
000065 9015      	LPM  R1,Z+
000066 01bf      	MOVW R22,R30
000067 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000068 9005      	LPM  R0,Z+
000069 920d      	ST   X+,R0
00006a 9701      	SBIW R24,1
00006b f7e1      	BRNE __GLOBAL_INI_LOOP
00006c 01fb      	MOVW R30,R22
00006d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006f bfed      	OUT  SPL,R30
000070 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000071 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000072 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000073 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000074 940c 00a9 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <stdint.h>
                 ;
                 ;#define KEYPAD_R1 PORTD.0
                 ;#define KEYPAD_R2 PORTD.1
                 ;#define KEYPAD_R3 PORTD.2
                 ;#define KEYPAD_R4 PORTD.3
                 ;#define KEYPAD_C1 PIND.4
                 ;#define KEYPAD_C2 PIND.5
                 ;#define KEYPAD_C3 PIND.6
                 ;#define KEYPAD_C4 PIND.7
                 ;
                 ;#define KEYPAD_MULTIPLY '*'
                 ;#define KEYPAD_DIVISION '/'
                 ;#define KEYPAD_ADD '+'
                 ;#define KEYPAD_MINUS '-'
                 ;#define KEYPAD_EQUAL '='
                 ;#define KEYPAD_CLEAR 'C'
                 ;
                 ;#define KEYPAD_NUM0 '0'
                 ;#define KEYPAD_NUM1 '1'
                 ;#define KEYPAD_NUM2 '2'
                 ;#define KEYPAD_NUM3 '3'
                 ;#define KEYPAD_NUM4 '4'
                 ;#define KEYPAD_NUM5 '5'
                 ;#define KEYPAD_NUM6 '6'
                 ;#define KEYPAD_NUM7 '7'
                 ;#define KEYPAD_NUM8 '8'
                 ;#define KEYPAD_NUM9 '9'
                 ;
                 ;unsigned char keypad_scan();
                 ;
                 ;float COMPUTE(float num1, float num2, unsigned char operation) {
                 ; 0000 0025 float COMPUTE(float num1, float num2, unsigned char operation) {
                 
                 	.CSEG
                 _COMPUTE:
                 ; .FSTART _COMPUTE
                 ; 0000 0026     switch (operation)
000076 93aa      	ST   -Y,R26
                 ;	num1 -> Y+5
                 ;	num2 -> Y+1
                 ;	operation -> Y+0
000077 81e8      	LD   R30,Y
000078 e0f0      	LDI  R31,0
                 ; 0000 0027         {
                 ; 0000 0028             case KEYPAD_MULTIPLY:
000079 32ea      	CPI  R30,LOW(0x2A)
00007a e0a0      	LDI  R26,HIGH(0x2A)
00007b 07fa      	CPC  R31,R26
00007c f429      	BRNE _0x6
                 ; 0000 0029                 return num1 * num2;
00007d 940e 06d1 	CALL SUBOPT_0x0
00007f 940e 0950 	CALL __MULF12
000081 c025      	RJMP _0x20C0007
                 ; 0000 002A             case KEYPAD_DIVISION:
                 _0x6:
000082 32ef      	CPI  R30,LOW(0x2F)
000083 e0a0      	LDI  R26,HIGH(0x2F)
000084 07fa      	CPC  R31,R26
000085 f429      	BRNE _0x7
                 ; 0000 002B                 return num1 / num2;
000086 940e 06d1 	CALL SUBOPT_0x0
000088 940e 099e 	CALL __DIVF21
00008a c01c      	RJMP _0x20C0007
                 ; 0000 002C             case KEYPAD_ADD:
                 _0x7:
00008b 32eb      	CPI  R30,LOW(0x2B)
00008c e0a0      	LDI  R26,HIGH(0x2B)
00008d 07fa      	CPC  R31,R26
00008e f429      	BRNE _0x8
                 ; 0000 002D                 return num1 + num2;
00008f 940e 06d1 	CALL SUBOPT_0x0
000091 940e 0900 	CALL __ADDF12
000093 c013      	RJMP _0x20C0007
                 ; 0000 002E             case KEYPAD_MINUS:
                 _0x8:
000094 32ed      	CPI  R30,LOW(0x2D)
000095 e0a0      	LDI  R26,HIGH(0x2D)
000096 07fa      	CPC  R31,R26
000097 f459      	BRNE _0xA
                 ; 0000 002F                 return num1 - num2;
                +
000098 81a9     +LDD R26 , Y + 1
000099 81ba     +LDD R27 , Y + 1 + 1
00009a 818b     +LDD R24 , Y + 1 + 2
00009b 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
                +
00009c 81ed     +LDD R30 , Y + 5
00009d 81fe     +LDD R31 , Y + 5 + 1
00009e 816f     +LDD R22 , Y + 5 + 2
00009f 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
0000a0 940e 08f9 	CALL __SUBF12
0000a2 c004      	RJMP _0x20C0007
                 ; 0000 0030             default: break;
                 _0xA:
                 ; 0000 0031         }
                 ; 0000 0032     return -1;
                +
0000a3 e0e0     +LDI R30 , LOW ( 0xBF800000 )
0000a4 e0f0     +LDI R31 , HIGH ( 0xBF800000 )
0000a5 e860     +LDI R22 , BYTE3 ( 0xBF800000 )
0000a6 eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
                 _0x20C0007:
0000a7 9629      	ADIW R28,9
0000a8 9508      	RET
                 ; 0000 0033 }
                 ; .FEND
                 ;
                 ;
                 ;float num0 = 0;
                 ;float num1 = 1;
                 
                 	.DSEG
                 ;float num2 = 0;
                 ;
                 ;char operation0 = KEYPAD_ADD;
                 ;char operation1 = KEYPAD_MULTIPLY;
                 ;int operation_enter = 0;
                 ;int equal_enter = 1;
                 ;char buffer[32];
                 ;
                 ;void main(void) {
                 ; 0000 0040 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0041     unsigned char key_res;
                 ; 0000 0042     DDRC = 0xFF;
                 ;	key_res -> R17
0000a9 efef      	LDI  R30,LOW(255)
0000aa bbe4      	OUT  0x14,R30
                 ; 0000 0043     DDRD = 0x0F;
0000ab e0ef      	LDI  R30,LOW(15)
0000ac bbe1      	OUT  0x11,R30
                 ; 0000 0044     PORTC = 0x00;
0000ad e0e0      	LDI  R30,LOW(0)
0000ae bbe5      	OUT  0x15,R30
                 ; 0000 0045 
                 ; 0000 0046     lcd_init(16);
0000af e1a0      	LDI  R26,LOW(16)
0000b0 d154      	RCALL _lcd_init
                 ; 0000 0047     lcd_clear();
0000b1 d121      	RCALL _lcd_clear
                 ; 0000 0048 
                 ; 0000 0049     while (1) {
                 _0xC:
                 ; 0000 004A         key_res = keypad_scan();
0000b2 d09e      	RCALL _keypad_scan
0000b3 2f1e      	MOV  R17,R30
                 ; 0000 004B 
                 ; 0000 004C         if (key_res != 255) {
0000b4 3f1f      	CPI  R17,255
0000b5 f409      	BRNE PC+2
0000b6 c098      	RJMP _0xF
                 ; 0000 004D             while (keypad_scan() != 255);
                 _0x10:
0000b7 d099      	RCALL _keypad_scan
0000b8 3fef      	CPI  R30,LOW(0xFF)
0000b9 f7e9      	BRNE _0x10
                 ; 0000 004E             delay_ms(20);
0000ba e1a4      	LDI  R26,LOW(20)
0000bb e0b0      	LDI  R27,0
0000bc 940e 0850 	CALL _delay_ms
                 ; 0000 004F 
                 ; 0000 0050             if (key_res == KEYPAD_CLEAR) {
0000be 3413      	CPI  R17,67
0000bf f421      	BRNE _0x13
                 ; 0000 0051                 lcd_clear();
0000c0 d112      	RCALL _lcd_clear
                 ; 0000 0052 
                 ; 0000 0053                 num0 = 0;
0000c1 940e 06da 	CALL SUBOPT_0x1
                 ; 0000 0054                 num1 = 1;
                 ; 0000 0055                 num2 = 0;
                 ; 0000 0056                 operation0 = KEYPAD_ADD;
                 ; 0000 0057                 operation1 = KEYPAD_MULTIPLY;
                 ; 0000 0058                 operation_enter = 0;
                 ; 0000 0059                 equal_enter = 1;
                 ; 0000 005A 
                 ; 0000 005B             } else if (key_res == KEYPAD_EQUAL) {
0000c3 c08b      	RJMP _0x14
                 _0x13:
0000c4 331d      	CPI  R17,61
0000c5 f5a1      	BRNE _0x15
                 ; 0000 005C                 if (operation_enter != 1 && equal_enter != 1) {
0000c6 e0e1      	LDI  R30,LOW(1)
0000c7 e0f0      	LDI  R31,HIGH(1)
0000c8 15e6      	CP   R30,R6
0000c9 05f7      	CPC  R31,R7
0000ca f019      	BREQ _0x17
0000cb 940e 0701 	CALL SUBOPT_0x2
0000cd f409      	BRNE _0x18
                 _0x17:
0000ce c02a      	RJMP _0x16
                 _0x18:
                 ; 0000 005D                     num1 = COMPUTE(num1, num2, operation1);
0000cf 940e 0706 	CALL SUBOPT_0x3
0000d1 940e 0711 	CALL SUBOPT_0x4
                 ; 0000 005E                     num2 = 0;
                 ; 0000 005F                     num0 = COMPUTE(num0, num1, operation0);
0000d3 940e 0730 	CALL SUBOPT_0x5
0000d5 940e 0706 	CALL SUBOPT_0x3
0000d7 940e 073b 	CALL SUBOPT_0x6
                 ; 0000 0060                     num1 = 0;
0000d9 e0e0      	LDI  R30,LOW(0)
0000da 93e0 0264 	STS  _num1,R30
0000dc 93e0 0265 	STS  _num1+1,R30
0000de 93e0 0266 	STS  _num1+2,R30
0000e0 93e0 0267 	STS  _num1+3,R30
                 ; 0000 0061 
                 ; 0000 0062                     sprintf(buffer, "%.2f", num0);
0000e2 e6ec      	LDI  R30,LOW(_buffer)
0000e3 e0f2      	LDI  R31,HIGH(_buffer)
0000e4 93fa      	ST   -Y,R31
0000e5 93ea      	ST   -Y,R30
                +
0000e6 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000e7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000e8 93fa      	ST   -Y,R31
0000e9 93ea      	ST   -Y,R30
0000ea 940e 0730 	CALL SUBOPT_0x5
0000ec e084      	LDI  R24,4
0000ed 940e 062f 	CALL _sprintf
0000ef 9628      	ADIW R28,8
                 ; 0000 0063                     lcd_gotoxy(0, 1);
0000f0 e0e0      	LDI  R30,LOW(0)
0000f1 93ea      	ST   -Y,R30
0000f2 e0a1      	LDI  R26,LOW(1)
0000f3 d0d2      	RCALL _lcd_gotoxy
                 ; 0000 0064                     lcd_puts(buffer);
0000f4 e6ac      	LDI  R26,LOW(_buffer)
0000f5 e0b2      	LDI  R27,HIGH(_buffer)
0000f6 d0fd      	RCALL _lcd_puts
                 ; 0000 0065 
                 ; 0000 0066                     num0 = 0;
0000f7 940e 06da 	CALL SUBOPT_0x1
                 ; 0000 0067                     num1 = 1;
                 ; 0000 0068                     num2 = 0;
                 ; 0000 0069                     operation0 = KEYPAD_ADD;
                 ; 0000 006A                     operation1 = KEYPAD_MULTIPLY;
                 ; 0000 006B                     operation_enter = 0;
                 ; 0000 006C                     equal_enter = 1;
                 ; 0000 006D                 }
                 ; 0000 006E 
                 ; 0000 006F             } else if (key_res == KEYPAD_DIVISION || key_res == KEYPAD_MULTIPLY || key_res == KEYPAD_MINUS || key_res == ...
                 _0x16:
0000f9 c055      	RJMP _0x19
                 _0x15:
0000fa 321f      	CPI  R17,47
0000fb f031      	BREQ _0x1B
0000fc 321a      	CPI  R17,42
0000fd f021      	BREQ _0x1B
0000fe 321d      	CPI  R17,45
0000ff f011      	BREQ _0x1B
000100 321b      	CPI  R17,43
000101 f591      	BRNE _0x1A
                 _0x1B:
                 ; 0000 0070                 if (operation_enter != 1 && equal_enter != 1) {
000102 e0e1      	LDI  R30,LOW(1)
000103 e0f0      	LDI  R31,HIGH(1)
000104 15e6      	CP   R30,R6
000105 05f7      	CPC  R31,R7
000106 f019      	BREQ _0x1E
000107 940e 0701 	CALL SUBOPT_0x2
000109 f409      	BRNE _0x1F
                 _0x1E:
00010a c028      	RJMP _0x1D
                 _0x1F:
                 ; 0000 0071                     if (key_res == KEYPAD_DIVISION || key_res == KEYPAD_MULTIPLY) {
00010b 321f      	CPI  R17,47
00010c f011      	BREQ _0x21
00010d 321a      	CPI  R17,42
00010e f431      	BRNE _0x20
                 _0x21:
                 ; 0000 0072                         num1 = COMPUTE(num1, num2, operation1);
00010f 940e 0706 	CALL SUBOPT_0x3
000111 940e 0711 	CALL SUBOPT_0x4
                 ; 0000 0073                         num2 = 0;
                 ; 0000 0074                         operation1 = key_res;
000113 2e41      	MOV  R4,R17
                 ; 0000 0075                     } else {
000114 c019      	RJMP _0x23
                 _0x20:
                 ; 0000 0076                         num1 = COMPUTE(num1, num2, operation1);
000115 940e 0706 	CALL SUBOPT_0x3
000117 940e 0711 	CALL SUBOPT_0x4
                 ; 0000 0077                         num2 = 0;
                 ; 0000 0078                         num0 = COMPUTE(num0, num1, operation0);
000119 940e 0730 	CALL SUBOPT_0x5
00011b 940e 0706 	CALL SUBOPT_0x3
00011d 940e 073b 	CALL SUBOPT_0x6
                 ; 0000 0079                         num1 = 1;
                +
00011f e0e0     +LDI R30 , LOW ( 0x3F800000 )
000120 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000121 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000122 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000123 93e0 0264 	STS  _num1,R30
000125 93f0 0265 	STS  _num1+1,R31
000127 9360 0266 	STS  _num1+2,R22
000129 9370 0267 	STS  _num1+3,R23
                 ; 0000 007A                         operation0 = key_res;
00012b 2e51      	MOV  R5,R17
                 ; 0000 007B                         operation1 = KEYPAD_MULTIPLY;
00012c e2ea      	LDI  R30,LOW(42)
00012d 2e4e      	MOV  R4,R30
                 ; 0000 007C                     }
                 _0x23:
                 ; 0000 007D                     lcd_putchar(key_res);
00012e 2fa1      	MOV  R26,R17
00012f d0af      	RCALL _lcd_putchar
                 ; 0000 007E                     operation_enter = 1;
000130 e0e1      	LDI  R30,LOW(1)
000131 e0f0      	LDI  R31,HIGH(1)
000132 013f      	MOVW R6,R30
                 ; 0000 007F                 }
                 ; 0000 0080             } else {
                 _0x1D:
000133 c01b      	RJMP _0x24
                 _0x1A:
                 ; 0000 0081                 if (equal_enter == 1) {
000134 940e 0701 	CALL SUBOPT_0x2
000136 f409      	BRNE _0x25
                 ; 0000 0082                     lcd_clear();
000137 d09b      	RCALL _lcd_clear
                 ; 0000 0083                 }
                 ; 0000 0084                 equal_enter = 0;
                 _0x25:
000138 2488      	CLR  R8
000139 2499      	CLR  R9
                 ; 0000 0085                 operation_enter = 0;
00013a 2466      	CLR  R6
00013b 2477      	CLR  R7
                 ; 0000 0086                 lcd_putchar(key_res);
00013c 2fa1      	MOV  R26,R17
00013d d0a1      	RCALL _lcd_putchar
                 ; 0000 0087 
                 ; 0000 0088                 num2 *= 10;
00013e 940e 0747 	CALL SUBOPT_0x7
000140 940e 0750 	CALL SUBOPT_0x8
000142 940e 0757 	CALL SUBOPT_0x9
                 ; 0000 0089                 num2 += key_res - 48;
000144 2fe1      	MOV  R30,R17
000145 e0f0      	LDI  R31,0
000146 97f0      	SBIW R30,48
000147 940e 0747 	CALL SUBOPT_0x7
000149 940e 0760 	CALL SUBOPT_0xA
00014b 940e 0900 	CALL __ADDF12
00014d 940e 0757 	CALL SUBOPT_0x9
                 ; 0000 008A             }
                 _0x24:
                 _0x19:
                 _0x14:
                 ; 0000 008B 
                 ; 0000 008C         }
                 ; 0000 008D     }
                 _0xF:
00014f cf62      	RJMP _0xC
                 ; 0000 008E }
                 _0x26:
000150 cfff      	RJMP _0x26
                 ; .FEND
                 ;
                 ;unsigned char keypad_scan() {
                 ; 0000 0090 unsigned char keypad_scan() {
                 _keypad_scan:
                 ; .FSTART _keypad_scan
                 ; 0000 0091     unsigned char result = 255;
                 ; 0000 0092 
                 ; 0000 0093     ////////////////////////  ROW1 ////////////////////////
                 ; 0000 0094     KEYPAD_R1 = 1;
000151 931a      	ST   -Y,R17
                 ;	result -> R17
000152 ef1f      	LDI  R17,255
000153 9a90      	SBI  0x12,0
                 ; 0000 0095     KEYPAD_R2 = 0;
000154 9891      	CBI  0x12,1
                 ; 0000 0096     KEYPAD_R3 = 0;
000155 940e 0765 	CALL SUBOPT_0xB
                 ; 0000 0097     KEYPAD_R4 = 0;
                 ; 0000 0098 
                 ; 0000 0099     delay_ms(5);
                 ; 0000 009A     if (KEYPAD_C1)
000157 9b84      	SBIS 0x10,4
000158 c002      	RJMP _0x2F
                 ; 0000 009B         result = KEYPAD_NUM7;
000159 e317      	LDI  R17,LOW(55)
                 ; 0000 009C     else if (KEYPAD_C2)
00015a c00a      	RJMP _0x30
                 _0x2F:
00015b 9b85      	SBIS 0x10,5
00015c c002      	RJMP _0x31
                 ; 0000 009D         result = KEYPAD_NUM8;
00015d e318      	LDI  R17,LOW(56)
                 ; 0000 009E     else if (KEYPAD_C3)
00015e c006      	RJMP _0x32
                 _0x31:
00015f 9b86      	SBIS 0x10,6
000160 c002      	RJMP _0x33
                 ; 0000 009F         result = KEYPAD_NUM9;
000161 e319      	LDI  R17,LOW(57)
                 ; 0000 00A0     else if (KEYPAD_C4)
000162 c002      	RJMP _0x34
                 _0x33:
000163 9987      	SBIC 0x10,7
                 ; 0000 00A1         result = KEYPAD_DIVISION;
000164 e21f      	LDI  R17,LOW(47)
                 ; 0000 00A2 
                 ; 0000 00A3 
                 ; 0000 00A4     ////////////////////////  ROW2 ////////////////////////
                 ; 0000 00A5     KEYPAD_R1 = 0;
                 _0x34:
                 _0x32:
                 _0x30:
000165 9890      	CBI  0x12,0
                 ; 0000 00A6     KEYPAD_R2 = 1;
000166 9a91      	SBI  0x12,1
                 ; 0000 00A7     KEYPAD_R3 = 0;
000167 940e 0765 	CALL SUBOPT_0xB
                 ; 0000 00A8     KEYPAD_R4 = 0;
                 ; 0000 00A9 
                 ; 0000 00AA     delay_ms(5);
                 ; 0000 00AB     if (KEYPAD_C1)
000169 9b84      	SBIS 0x10,4
00016a c002      	RJMP _0x3E
                 ; 0000 00AC         result = KEYPAD_NUM4;
00016b e314      	LDI  R17,LOW(52)
                 ; 0000 00AD     else if (KEYPAD_C2)
00016c c00a      	RJMP _0x3F
                 _0x3E:
00016d 9b85      	SBIS 0x10,5
00016e c002      	RJMP _0x40
                 ; 0000 00AE         result = KEYPAD_NUM5;
00016f e315      	LDI  R17,LOW(53)
                 ; 0000 00AF     else if (KEYPAD_C3)
000170 c006      	RJMP _0x41
                 _0x40:
000171 9b86      	SBIS 0x10,6
000172 c002      	RJMP _0x42
                 ; 0000 00B0         result = KEYPAD_NUM6;
000173 e316      	LDI  R17,LOW(54)
                 ; 0000 00B1     else if (KEYPAD_C4)
000174 c002      	RJMP _0x43
                 _0x42:
000175 9987      	SBIC 0x10,7
                 ; 0000 00B2         result = KEYPAD_MULTIPLY;
000176 e21a      	LDI  R17,LOW(42)
                 ; 0000 00B3     ////////////////////////  ROW3 ////////////////////////
                 ; 0000 00B4     KEYPAD_R1 = 0;
                 _0x43:
                 _0x41:
                 _0x3F:
000177 9890      	CBI  0x12,0
                 ; 0000 00B5     KEYPAD_R2 = 0;
000178 9891      	CBI  0x12,1
                 ; 0000 00B6     KEYPAD_R3 = 1;
000179 9a92      	SBI  0x12,2
                 ; 0000 00B7     KEYPAD_R4 = 0;
00017a 9893      	CBI  0x12,3
                 ; 0000 00B8 
                 ; 0000 00B9     delay_ms(5);
00017b e0a5      	LDI  R26,LOW(5)
00017c e0b0      	LDI  R27,0
00017d 940e 0850 	CALL _delay_ms
                 ; 0000 00BA     if (KEYPAD_C1)
00017f 9b84      	SBIS 0x10,4
000180 c002      	RJMP _0x4D
                 ; 0000 00BB         result = KEYPAD_NUM1;
000181 e311      	LDI  R17,LOW(49)
                 ; 0000 00BC     else if (KEYPAD_C2)
000182 c00a      	RJMP _0x4E
                 _0x4D:
000183 9b85      	SBIS 0x10,5
000184 c002      	RJMP _0x4F
                 ; 0000 00BD         result = KEYPAD_NUM2;
000185 e312      	LDI  R17,LOW(50)
                 ; 0000 00BE     else if (KEYPAD_C3)
000186 c006      	RJMP _0x50
                 _0x4F:
000187 9b86      	SBIS 0x10,6
000188 c002      	RJMP _0x51
                 ; 0000 00BF         result = KEYPAD_NUM3;
000189 e313      	LDI  R17,LOW(51)
                 ; 0000 00C0     else if (KEYPAD_C4)
00018a c002      	RJMP _0x52
                 _0x51:
00018b 9987      	SBIC 0x10,7
                 ; 0000 00C1         result = KEYPAD_MINUS;
00018c e21d      	LDI  R17,LOW(45)
                 ; 0000 00C2     ////////////////////////  ROW4 ////////////////////////
                 ; 0000 00C3     KEYPAD_R1 = 0;
                 _0x52:
                 _0x50:
                 _0x4E:
00018d 9890      	CBI  0x12,0
                 ; 0000 00C4     KEYPAD_R2 = 0;
00018e 9891      	CBI  0x12,1
                 ; 0000 00C5     KEYPAD_R3 = 0;
00018f 9892      	CBI  0x12,2
                 ; 0000 00C6     KEYPAD_R4 = 1;
000190 9a93      	SBI  0x12,3
                 ; 0000 00C7 
                 ; 0000 00C8     delay_ms(5);
000191 e0a5      	LDI  R26,LOW(5)
000192 e0b0      	LDI  R27,0
000193 940e 0850 	CALL _delay_ms
                 ; 0000 00C9     if (KEYPAD_C1)
000195 9b84      	SBIS 0x10,4
000196 c002      	RJMP _0x5C
                 ; 0000 00CA         result = KEYPAD_CLEAR;
000197 e413      	LDI  R17,LOW(67)
                 ; 0000 00CB     else if (KEYPAD_C2)
000198 c00a      	RJMP _0x5D
                 _0x5C:
000199 9b85      	SBIS 0x10,5
00019a c002      	RJMP _0x5E
                 ; 0000 00CC         result = KEYPAD_NUM0;
00019b e310      	LDI  R17,LOW(48)
                 ; 0000 00CD     else if (KEYPAD_C3)
00019c c006      	RJMP _0x5F
                 _0x5E:
00019d 9b86      	SBIS 0x10,6
00019e c002      	RJMP _0x60
                 ; 0000 00CE         result = KEYPAD_EQUAL;
00019f e31d      	LDI  R17,LOW(61)
                 ; 0000 00CF     else if (KEYPAD_C4)
0001a0 c002      	RJMP _0x61
                 _0x60:
0001a1 9987      	SBIC 0x10,7
                 ; 0000 00D0         result = KEYPAD_ADD;
0001a2 e21b      	LDI  R17,LOW(43)
                 ; 0000 00D1 
                 ; 0000 00D2     return result;
                 _0x61:
                 _0x5F:
                 _0x5D:
0001a3 2fe1      	MOV  R30,R17
0001a4 9119      	LD   R17,Y+
0001a5 9508      	RET
                 ; 0000 00D3 }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0001a6 93aa      	ST   -Y,R26
0001a7 b3e5      	IN   R30,0x15
0001a8 70ef      	ANDI R30,LOW(0xF)
0001a9 2fae      	MOV  R26,R30
0001aa 81e8      	LD   R30,Y
0001ab 7fe0      	ANDI R30,LOW(0xF0)
0001ac 2bea      	OR   R30,R26
0001ad bbe5      	OUT  0x15,R30
                +
0001ae e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001af 958a     +DEC R24
0001b0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001b1 9aaa      	SBI  0x15,2
                +
0001b2 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001b3 958a     +DEC R24
0001b4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001b5 98aa      	CBI  0x15,2
                +
0001b6 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001b7 958a     +DEC R24
0001b8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001b9 c077      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001ba 93aa      	ST   -Y,R26
0001bb 81a8      	LD   R26,Y
0001bc dfe9      	RCALL __lcd_write_nibble_G100
0001bd 81e8          ld    r30,y
0001be 95e2          swap  r30
0001bf 83e8          st    y,r30
0001c0 81a8      	LD   R26,Y
0001c1 dfe4      	RCALL __lcd_write_nibble_G100
                +
0001c2 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001c3 958a     +DEC R24
0001c4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001c5 c06b      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001c6 93aa      	ST   -Y,R26
0001c7 81e8      	LD   R30,Y
0001c8 e0f0      	LDI  R31,0
0001c9 57e4      	SUBI R30,LOW(-__base_y_G100)
0001ca 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0001cb 81e0      	LD   R30,Z
0001cc 81a9      	LDD  R26,Y+1
0001cd 0fae      	ADD  R26,R30
0001ce dfeb      	RCALL __lcd_write_data
0001cf 80b9      	LDD  R11,Y+1
0001d0 80a8      	LDD  R10,Y+0
0001d1 9622      	ADIW R28,2
0001d2 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001d3 e0a2      	LDI  R26,LOW(2)
0001d4 940e 076b 	CALL SUBOPT_0xC
0001d6 e0ac      	LDI  R26,LOW(12)
0001d7 dfe2      	RCALL __lcd_write_data
0001d8 e0a1      	LDI  R26,LOW(1)
0001d9 940e 076b 	CALL SUBOPT_0xC
0001db e0e0      	LDI  R30,LOW(0)
0001dc 2eae      	MOV  R10,R30
0001dd 2ebe      	MOV  R11,R30
0001de 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001df 93aa      	ST   -Y,R26
0001e0 81a8      	LD   R26,Y
0001e1 30aa      	CPI  R26,LOW(0xA)
0001e2 f011      	BREQ _0x2000005
0001e3 14bd      	CP   R11,R13
0001e4 f048      	BRLO _0x2000004
                 _0x2000005:
0001e5 e0e0      	LDI  R30,LOW(0)
0001e6 93ea      	ST   -Y,R30
0001e7 94a3      	INC  R10
0001e8 2daa      	MOV  R26,R10
0001e9 dfdc      	RCALL _lcd_gotoxy
0001ea 81a8      	LD   R26,Y
0001eb 30aa      	CPI  R26,LOW(0xA)
0001ec f409      	BRNE _0x2000007
0001ed c043      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
0001ee 94b3      	INC  R11
0001ef 9aa8      	SBI  0x15,0
0001f0 81a8      	LD   R26,Y
0001f1 dfc8      	RCALL __lcd_write_data
0001f2 98a8      	CBI  0x15,0
0001f3 c03d      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001f4 93ba      	ST   -Y,R27
0001f5 93aa      	ST   -Y,R26
0001f6 931a      	ST   -Y,R17
                 _0x2000008:
0001f7 81a9      	LDD  R26,Y+1
0001f8 81ba      	LDD  R27,Y+1+1
0001f9 91ed      	LD   R30,X+
0001fa 83a9      	STD  Y+1,R26
0001fb 83ba      	STD  Y+1+1,R27
0001fc 2f1e      	MOV  R17,R30
0001fd 30e0      	CPI  R30,0
0001fe f019      	BREQ _0x200000A
0001ff 2fa1      	MOV  R26,R17
000200 dfde      	RCALL _lcd_putchar
000201 cff5      	RJMP _0x2000008
                 _0x200000A:
000202 8118      	LDD  R17,Y+0
000203 9623      	ADIW R28,3
000204 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000205 93aa      	ST   -Y,R26
000206 b3e4      	IN   R30,0x14
000207 6fe0      	ORI  R30,LOW(0xF0)
000208 bbe4      	OUT  0x14,R30
000209 9aa2      	SBI  0x14,2
00020a 9aa0      	SBI  0x14,0
00020b 9aa1      	SBI  0x14,1
00020c 98aa      	CBI  0x15,2
00020d 98a8      	CBI  0x15,0
00020e 98a9      	CBI  0x15,1
00020f 80d8      	LDD  R13,Y+0
000210 81e8      	LD   R30,Y
000211 58e0      	SUBI R30,-LOW(128)
                +
000212 93e0 028e+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000214 81e8      	LD   R30,Y
000215 54e0      	SUBI R30,-LOW(192)
                +
000216 93e0 028f+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000218 e1a4      	LDI  R26,LOW(20)
000219 e0b0      	LDI  R27,0
00021a 940e 0850 	CALL _delay_ms
00021c 940e 0771 	CALL SUBOPT_0xD
00021e 940e 0771 	CALL SUBOPT_0xD
000220 940e 0771 	CALL SUBOPT_0xD
000222 e2a0      	LDI  R26,LOW(32)
000223 df82      	RCALL __lcd_write_nibble_G100
                +
000224 ec88     +LDI R24 , LOW ( 200 )
000225 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000226 9701     +SBIW R24 , 1
000227 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000228 e2a8      	LDI  R26,LOW(40)
000229 df90      	RCALL __lcd_write_data
00022a e0a4      	LDI  R26,LOW(4)
00022b df8e      	RCALL __lcd_write_data
00022c e8a5      	LDI  R26,LOW(133)
00022d df8c      	RCALL __lcd_write_data
00022e e0a6      	LDI  R26,LOW(6)
00022f df8a      	RCALL __lcd_write_data
000230 dfa2      	RCALL _lcd_clear
                 _0x20C0006:
000231 9621      	ADIW R28,1
000232 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000233 940e 0779 	CALL SUBOPT_0xE
000235 e0e0      	LDI  R30,LOW(0)
000236 83ea      	STD  Y+2,R30
000237 e3ef      	LDI  R30,LOW(63)
000238 83eb      	STD  Y+3,R30
000239 931a      	ST   -Y,R17
00023a 930a      	ST   -Y,R16
00023b 85eb      	LDD  R30,Y+11
00023c 85fc      	LDD  R31,Y+11+1
00023d 3fef      	CPI  R30,LOW(0xFFFF)
00023e efaf      	LDI  R26,HIGH(0xFFFF)
00023f 07fa      	CPC  R31,R26
000240 f439      	BRNE _0x202000D
000241 940e 0780 	CALL SUBOPT_0xF
                +
000243 e6a8     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000244 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000245 940e 06ab 	CALL _strcpyf
000247 c0a9      	RJMP _0x20C0005
                 _0x202000D:
000248 3fef      	CPI  R30,LOW(0x7FFF)
000249 e7af      	LDI  R26,HIGH(0x7FFF)
00024a 07fa      	CPC  R31,R26
00024b f439      	BRNE _0x202000C
00024c 940e 0780 	CALL SUBOPT_0xF
                +
00024e e6a9     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
00024f e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000250 940e 06ab 	CALL _strcpyf
000252 c09e      	RJMP _0x20C0005
                 _0x202000C:
000253 85ac      	LDD  R26,Y+12
000254 23aa      	TST  R26
000255 f462      	BRPL _0x202000F
                +
000256 85e9     +LDD R30 , Y + 9
000257 85fa     +LDD R31 , Y + 9 + 1
000258 856b     +LDD R22 , Y + 9 + 2
000259 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00025a 940e 085a 	CALL __ANEGF1
00025c 940e 0785 	CALL SUBOPT_0x10
00025e 940e 078a 	CALL SUBOPT_0x11
000260 e2ed      	LDI  R30,LOW(45)
000261 93ec      	ST   X,R30
                 _0x202000F:
000262 85a8      	LDD  R26,Y+8
000263 30a7      	CPI  R26,LOW(0x7)
000264 f010      	BRLO _0x2020010
000265 e0e6      	LDI  R30,LOW(6)
000266 87e8      	STD  Y+8,R30
                 _0x2020010:
000267 8518      	LDD  R17,Y+8
                 _0x2020011:
000268 2fe1      	MOV  R30,R17
000269 5011      	SUBI R17,1
00026a 30e0      	CPI  R30,0
00026b f039      	BREQ _0x2020013
00026c 940e 0791 	CALL SUBOPT_0x12
00026e 940e 0796 	CALL SUBOPT_0x13
000270 940e 079d 	CALL SUBOPT_0x14
000272 cff5      	RJMP _0x2020011
                 _0x2020013:
000273 940e 07a2 	CALL SUBOPT_0x15
000275 940e 0900 	CALL __ADDF12
000277 940e 0785 	CALL SUBOPT_0x10
000279 e010      	LDI  R17,LOW(0)
                +
00027a e0e0     +LDI R30 , LOW ( 0x3F800000 )
00027b e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00027c e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00027d e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00027e 940e 079d 	CALL SUBOPT_0x14
                 _0x2020014:
000280 940e 07a2 	CALL SUBOPT_0x15
000282 940e 09e3 	CALL __CMPF12
000284 f088      	BRLO _0x2020016
000285 940e 0791 	CALL SUBOPT_0x12
000287 940e 0750 	CALL SUBOPT_0x8
000289 940e 079d 	CALL SUBOPT_0x14
00028b 5f1f      	SUBI R17,-LOW(1)
00028c 3217      	CPI  R17,39
00028d f038      	BRLO _0x2020017
00028e 940e 0780 	CALL SUBOPT_0xF
                +
000290 e6ad     +LDI R26 , LOW ( 2 * _0x2020000 + ( 5 ) )
000291 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW2FN _0x2020000,5
000292 940e 06ab 	CALL _strcpyf
000294 c05c      	RJMP _0x20C0005
                 _0x2020017:
000295 cfea      	RJMP _0x2020014
                 _0x2020016:
000296 3010      	CPI  R17,0
000297 f429      	BRNE _0x2020018
000298 940e 078a 	CALL SUBOPT_0x11
00029a e3e0      	LDI  R30,LOW(48)
00029b 93ec      	ST   X,R30
00029c c029      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
00029d 2fe1      	MOV  R30,R17
00029e 5011      	SUBI R17,1
00029f 30e0      	CPI  R30,0
0002a0 f129      	BREQ _0x202001C
0002a1 940e 0791 	CALL SUBOPT_0x12
0002a3 940e 0796 	CALL SUBOPT_0x13
0002a5 940e 07ab 	CALL SUBOPT_0x16
0002a7 01df      	MOVW R26,R30
0002a8 01cb      	MOVW R24,R22
0002a9 940e 0694 	CALL _floor
0002ab 940e 079d 	CALL SUBOPT_0x14
0002ad 940e 07a2 	CALL SUBOPT_0x15
0002af 940e 099e 	CALL __DIVF21
0002b1 940e 088d 	CALL __CFD1U
0002b3 2f0e      	MOV  R16,R30
0002b4 940e 078a 	CALL SUBOPT_0x11
0002b6 2fe0      	MOV  R30,R16
0002b7 5de0      	SUBI R30,-LOW(48)
0002b8 93ec      	ST   X,R30
0002b9 2fe0      	MOV  R30,R16
0002ba e0f0      	LDI  R31,0
0002bb 940e 0791 	CALL SUBOPT_0x12
0002bd 940e 0760 	CALL SUBOPT_0xA
0002bf 940e 0950 	CALL __MULF12
0002c1 940e 07b2 	CALL SUBOPT_0x17
0002c3 940e 07b7 	CALL SUBOPT_0x18
0002c5 cfd7      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
0002c6 85e8      	LDD  R30,Y+8
0002c7 30e0      	CPI  R30,0
0002c8 f121      	BREQ _0x20C0004
0002c9 940e 078a 	CALL SUBOPT_0x11
0002cb e2ee      	LDI  R30,LOW(46)
0002cc 93ec      	ST   X,R30
                 _0x202001E:
0002cd 85e8      	LDD  R30,Y+8
0002ce 50e1      	SUBI R30,LOW(1)
0002cf 87e8      	STD  Y+8,R30
0002d0 5fef      	SUBI R30,-LOW(1)
0002d1 f0d9      	BREQ _0x2020020
0002d2 940e 07b2 	CALL SUBOPT_0x17
0002d4 940e 0750 	CALL SUBOPT_0x8
0002d6 940e 0785 	CALL SUBOPT_0x10
                +
0002d8 85e9     +LDD R30 , Y + 9
0002d9 85fa     +LDD R31 , Y + 9 + 1
0002da 856b     +LDD R22 , Y + 9 + 2
0002db 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0002dc 940e 088d 	CALL __CFD1U
0002de 2f0e      	MOV  R16,R30
0002df 940e 078a 	CALL SUBOPT_0x11
0002e1 2fe0      	MOV  R30,R16
0002e2 5de0      	SUBI R30,-LOW(48)
0002e3 93ec      	ST   X,R30
0002e4 2fe0      	MOV  R30,R16
0002e5 e0f0      	LDI  R31,0
0002e6 940e 07b2 	CALL SUBOPT_0x17
0002e8 940e 0760 	CALL SUBOPT_0xA
0002ea 940e 07b7 	CALL SUBOPT_0x18
0002ec cfe0      	RJMP _0x202001E
                 _0x2020020:
                 _0x20C0004:
0002ed 81ae      	LDD  R26,Y+6
0002ee 81bf      	LDD  R27,Y+6+1
0002ef e0e0      	LDI  R30,LOW(0)
0002f0 93ec      	ST   X,R30
                 _0x20C0005:
0002f1 8119      	LDD  R17,Y+1
0002f2 8108      	LDD  R16,Y+0
0002f3 962d      	ADIW R28,13
0002f4 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
0002f5 93ba      	ST   -Y,R27
0002f6 93aa      	ST   -Y,R26
0002f7 931a      	ST   -Y,R17
0002f8 930a      	ST   -Y,R16
0002f9 81aa      	LDD  R26,Y+2
0002fa 81bb      	LDD  R27,Y+2+1
0002fb 9612      	ADIW R26,2
0002fc 940e 0a6e 	CALL __GETW1P
0002fe 9730      	SBIW R30,0
0002ff f129      	BREQ _0x2040010
000300 81aa      	LDD  R26,Y+2
000301 81bb      	LDD  R27,Y+2+1
000302 9614      	ADIW R26,4
000303 940e 0a6e 	CALL __GETW1P
000305 018f      	MOVW R16,R30
000306 9730      	SBIW R30,0
000307 f061      	BREQ _0x2040012
                +
000308 3002     +CPI R16 , LOW ( 2 )
000309 e0e0     +LDI R30 , HIGH ( 2 )
00030a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00030b f080      	BRLO _0x2040013
00030c 01f8      	MOVW R30,R16
00030d 9731      	SBIW R30,1
00030e 018f      	MOVW R16,R30
                +
00030f 81aa     +LDD R26 , Y + 2
000310 81bb     +LDD R27 , Y + 2 + 1
000311 9614     +ADIW R26 , 4
000312 93ed     +ST X + , R30
000313 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040012:
000314 81aa      	LDD  R26,Y+2
000315 81bb      	LDD  R27,Y+2+1
000316 9612      	ADIW R26,2
000317 940e 07bc 	CALL SUBOPT_0x19
000319 9731      	SBIW R30,1
00031a 81ac      	LDD  R26,Y+4
00031b 83a0      	STD  Z+0,R26
                 _0x2040013:
00031c 81aa      	LDD  R26,Y+2
00031d 81bb      	LDD  R27,Y+2+1
00031e 940e 0a6e 	CALL __GETW1P
000320 23ff      	TST  R31
000321 f012      	BRMI _0x2040014
000322 940e 07bc 	CALL SUBOPT_0x19
                 _0x2040014:
000324 c006      	RJMP _0x2040015
                 _0x2040010:
000325 81aa      	LDD  R26,Y+2
000326 81bb      	LDD  R27,Y+2+1
000327 efef      	LDI  R30,LOW(65535)
000328 efff      	LDI  R31,HIGH(65535)
000329 93ed      	ST   X+,R30
00032a 93fc      	ST   X,R31
                 _0x2040015:
00032b 8119      	LDD  R17,Y+1
00032c 8108      	LDD  R16,Y+0
00032d 9625      	ADIW R28,5
00032e 9508      	RET
                 ; .FEND
                 __ftoe_G102:
                 ; .FSTART __ftoe_G102
00032f 940e 0779 	CALL SUBOPT_0xE
000331 e8e0      	LDI  R30,LOW(128)
000332 83ea      	STD  Y+2,R30
000333 e3ef      	LDI  R30,LOW(63)
000334 83eb      	STD  Y+3,R30
000335 940e 0aa4 	CALL __SAVELOCR4
000337 85ee      	LDD  R30,Y+14
000338 85ff      	LDD  R31,Y+14+1
000339 3fef      	CPI  R30,LOW(0xFFFF)
00033a efaf      	LDI  R26,HIGH(0xFFFF)
00033b 07fa      	CPC  R31,R26
00033c f449      	BRNE _0x2040019
00033d 85e8      	LDD  R30,Y+8
00033e 85f9      	LDD  R31,Y+8+1
00033f 93fa      	ST   -Y,R31
000340 93ea      	ST   -Y,R30
                +
000341 e7a2     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
000342 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000343 940e 06ab 	CALL _strcpyf
000345 c0cb      	RJMP _0x20C0003
                 _0x2040019:
000346 3fef      	CPI  R30,LOW(0x7FFF)
000347 e7af      	LDI  R26,HIGH(0x7FFF)
000348 07fa      	CPC  R31,R26
000349 f449      	BRNE _0x2040018
00034a 85e8      	LDD  R30,Y+8
00034b 85f9      	LDD  R31,Y+8+1
00034c 93fa      	ST   -Y,R31
00034d 93ea      	ST   -Y,R30
                +
00034e e7a3     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
00034f e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
000350 940e 06ab 	CALL _strcpyf
000352 c0be      	RJMP _0x20C0003
                 _0x2040018:
000353 85ab      	LDD  R26,Y+11
000354 30a7      	CPI  R26,LOW(0x7)
000355 f010      	BRLO _0x204001B
000356 e0e6      	LDI  R30,LOW(6)
000357 87eb      	STD  Y+11,R30
                 _0x204001B:
000358 851b      	LDD  R17,Y+11
                 _0x204001C:
000359 2fe1      	MOV  R30,R17
00035a 5011      	SUBI R17,1
00035b 30e0      	CPI  R30,0
00035c f029      	BREQ _0x204001E
00035d 940e 07c2 	CALL SUBOPT_0x1A
00035f 940e 07c7 	CALL SUBOPT_0x1B
000361 cff7      	RJMP _0x204001C
                 _0x204001E:
                +
000362 85ec     +LDD R30 , Y + 12
000363 85fd     +LDD R31 , Y + 12 + 1
000364 856e     +LDD R22 , Y + 12 + 2
000365 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000366 940e 0a9e 	CALL __CPD10
000368 f431      	BRNE _0x204001F
000369 e030      	LDI  R19,LOW(0)
00036a 940e 07c2 	CALL SUBOPT_0x1A
00036c 940e 07c7 	CALL SUBOPT_0x1B
00036e c037      	RJMP _0x2040020
                 _0x204001F:
00036f 853b      	LDD  R19,Y+11
000370 940e 07cc 	CALL SUBOPT_0x1C
000372 f009      	BREQ PC+2
000373 f408      	BRCC PC+2
000374 c010      	RJMP _0x2040021
000375 940e 07c2 	CALL SUBOPT_0x1A
000377 940e 07c7 	CALL SUBOPT_0x1B
                 _0x2040022:
000379 940e 07cc 	CALL SUBOPT_0x1C
00037b f040      	BRLO _0x2040024
00037c 940e 07d7 	CALL SUBOPT_0x1D
00037e 940e 0796 	CALL SUBOPT_0x13
000380 940e 07dc 	CALL SUBOPT_0x1E
000382 5f3f      	SUBI R19,-LOW(1)
000383 cff5      	RJMP _0x2040022
                 _0x2040024:
000384 c00f      	RJMP _0x2040025
                 _0x2040021:
                 _0x2040026:
000385 940e 07cc 	CALL SUBOPT_0x1C
000387 f440      	BRSH _0x2040028
000388 940e 07d7 	CALL SUBOPT_0x1D
00038a 940e 0750 	CALL SUBOPT_0x8
00038c 940e 07dc 	CALL SUBOPT_0x1E
00038e 5031      	SUBI R19,LOW(1)
00038f cff5      	RJMP _0x2040026
                 _0x2040028:
000390 940e 07c2 	CALL SUBOPT_0x1A
000392 940e 07c7 	CALL SUBOPT_0x1B
                 _0x2040025:
                +
000394 85ec     +LDD R30 , Y + 12
000395 85fd     +LDD R31 , Y + 12 + 1
000396 856e     +LDD R22 , Y + 12 + 2
000397 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000398 940e 07ab 	CALL SUBOPT_0x16
00039a 940e 07dc 	CALL SUBOPT_0x1E
00039c 940e 07cc 	CALL SUBOPT_0x1C
00039e f038      	BRLO _0x2040029
00039f 940e 07d7 	CALL SUBOPT_0x1D
0003a1 940e 0796 	CALL SUBOPT_0x13
0003a3 940e 07dc 	CALL SUBOPT_0x1E
0003a5 5f3f      	SUBI R19,-LOW(1)
                 _0x2040029:
                 _0x2040020:
0003a6 e010      	LDI  R17,LOW(0)
                 _0x204002A:
0003a7 85eb      	LDD  R30,Y+11
0003a8 17e1      	CP   R30,R17
0003a9 f1d8      	BRLO _0x204002C
                +
0003aa 81ac     +LDD R26 , Y + 4
0003ab 81bd     +LDD R27 , Y + 4 + 1
0003ac 818e     +LDD R24 , Y + 4 + 2
0003ad 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0003ae 940e 0796 	CALL SUBOPT_0x13
0003b0 940e 07ab 	CALL SUBOPT_0x16
0003b2 01df      	MOVW R26,R30
0003b3 01cb      	MOVW R24,R22
0003b4 940e 0694 	CALL _floor
0003b6 940e 07c7 	CALL SUBOPT_0x1B
                +
0003b8 81ec     +LDD R30 , Y + 4
0003b9 81fd     +LDD R31 , Y + 4 + 1
0003ba 816e     +LDD R22 , Y + 4 + 2
0003bb 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0003bc 940e 07d7 	CALL SUBOPT_0x1D
0003be 940e 099e 	CALL __DIVF21
0003c0 940e 088d 	CALL __CFD1U
0003c2 2f0e      	MOV  R16,R30
0003c3 940e 07e1 	CALL SUBOPT_0x1F
0003c5 2fe0      	MOV  R30,R16
0003c6 5de0      	SUBI R30,-LOW(48)
0003c7 93ec      	ST   X,R30
0003c8 2fe0      	MOV  R30,R16
0003c9 27ff      	CLR  R31
0003ca 2766      	CLR  R22
0003cb 2777      	CLR  R23
0003cc 940e 08c6 	CALL __CDF1
                +
0003ce 81ac     +LDD R26 , Y + 4
0003cf 81bd     +LDD R27 , Y + 4 + 1
0003d0 818e     +LDD R24 , Y + 4 + 2
0003d1 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0003d2 940e 0950 	CALL __MULF12
0003d4 940e 07d7 	CALL SUBOPT_0x1D
0003d6 940e 0a91 	CALL __SWAPD12
0003d8 940e 08f9 	CALL __SUBF12
0003da 940e 07dc 	CALL SUBOPT_0x1E
0003dc 2fe1      	MOV  R30,R17
0003dd 5f1f      	SUBI R17,-1
0003de 30e0      	CPI  R30,0
0003df f639      	BRNE _0x204002A
0003e0 940e 07e1 	CALL SUBOPT_0x1F
0003e2 e2ee      	LDI  R30,LOW(46)
0003e3 93ec      	ST   X,R30
0003e4 cfc2      	RJMP _0x204002A
                 _0x204002C:
0003e5 940e 07e8 	CALL SUBOPT_0x20
0003e7 9731      	SBIW R30,1
0003e8 85aa      	LDD  R26,Y+10
0003e9 83a0      	STD  Z+0,R26
0003ea 3030      	CPI  R19,0
0003eb f42c      	BRGE _0x204002E
0003ec 9531      	NEG  R19
0003ed 85a8      	LDD  R26,Y+8
0003ee 85b9      	LDD  R27,Y+8+1
0003ef e2ed      	LDI  R30,LOW(45)
0003f0 c003      	RJMP _0x2040113
                 _0x204002E:
0003f1 85a8      	LDD  R26,Y+8
0003f2 85b9      	LDD  R27,Y+8+1
0003f3 e2eb      	LDI  R30,LOW(43)
                 _0x2040113:
0003f4 93ec      	ST   X,R30
0003f5 940e 07e8 	CALL SUBOPT_0x20
0003f7 940e 07e8 	CALL SUBOPT_0x20
0003f9 9731      	SBIW R30,1
0003fa 01bf      	MOVW R22,R30
0003fb 2fa3      	MOV  R26,R19
0003fc e0ea      	LDI  R30,LOW(10)
0003fd 940e 0a28 	CALL __DIVB21
0003ff 5de0      	SUBI R30,-LOW(48)
000400 01db      	MOVW R26,R22
000401 93ec      	ST   X,R30
000402 940e 07e8 	CALL SUBOPT_0x20
000404 9731      	SBIW R30,1
000405 01bf      	MOVW R22,R30
000406 2fa3      	MOV  R26,R19
000407 e0ea      	LDI  R30,LOW(10)
000408 940e 0a52 	CALL __MODB21
00040a 5de0      	SUBI R30,-LOW(48)
00040b 01db      	MOVW R26,R22
00040c 93ec      	ST   X,R30
00040d 85a8      	LDD  R26,Y+8
00040e 85b9      	LDD  R27,Y+8+1
00040f e0e0      	LDI  R30,LOW(0)
000410 93ec      	ST   X,R30
                 _0x20C0003:
000411 940e 0aab 	CALL __LOADLOCR4
000413 9660      	ADIW R28,16
000414 9508      	RET
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
000415 93ba      	ST   -Y,R27
000416 93aa      	ST   -Y,R26
000417 97ef      	SBIW R28,63
000418 9761      	SBIW R28,17
000419 940e 0aa2 	CALL __SAVELOCR6
00041b e010      	LDI  R17,0
                +
00041c 01fe     +MOVW R30 , R28
00041d 5ae8     +SUBI R30 , LOW ( - 88 )
00041e 4fff     +SBCI R31 , HIGH ( - 88 )
00041f 9001     +LD R0 , Z +
000420 81f0     +LD R31 , Z
000421 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000422 87e8      	STD  Y+8,R30
000423 87f9      	STD  Y+8+1,R31
                +
000424 01fe     +MOVW R30 , R28
000425 5aea     +SUBI R30 , LOW ( - 86 )
000426 4fff     +SBCI R31 , HIGH ( - 86 )
000427 9001     +LD R0 , Z +
000428 81f0     +LD R31 , Z
000429 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00042a 83ee      	STD  Y+6,R30
00042b 83ff      	STD  Y+6+1,R31
00042c 81ae      	LDD  R26,Y+6
00042d 81bf      	LDD  R27,Y+6+1
00042e e0e0      	LDI  R30,LOW(0)
00042f e0f0      	LDI  R31,HIGH(0)
000430 93ed      	ST   X+,R30
000431 93fc      	ST   X,R31
                 _0x2040030:
000432 01de      	MOVW R26,R28
000433 5aa4      	SUBI R26,LOW(-(92))
000434 4fbf      	SBCI R27,HIGH(-(92))
000435 940e 07bc 	CALL SUBOPT_0x19
000437 9731      	SBIW R30,1
000438 91e4      	LPM  R30,Z
000439 2f2e      	MOV  R18,R30
00043a 30e0      	CPI  R30,0
00043b f409      	BRNE PC+2
00043c c1e9      	RJMP _0x2040032
00043d 2fe1      	MOV  R30,R17
00043e 30e0      	CPI  R30,0
00043f f439      	BRNE _0x2040036
000440 3225      	CPI  R18,37
000441 f411      	BRNE _0x2040037
000442 e011      	LDI  R17,LOW(1)
000443 c002      	RJMP _0x2040038
                 _0x2040037:
000444 940e 07ee 	CALL SUBOPT_0x21
                 _0x2040038:
000446 c1de      	RJMP _0x2040035
                 _0x2040036:
000447 30e1      	CPI  R30,LOW(0x1)
000448 f4c1      	BRNE _0x2040039
000449 3225      	CPI  R18,37
00044a f419      	BRNE _0x204003A
00044b 940e 07ee 	CALL SUBOPT_0x21
00044d c1d6      	RJMP _0x2040114
                 _0x204003A:
00044e e012      	LDI  R17,LOW(2)
00044f e0e0      	LDI  R30,LOW(0)
000450 8bed      	STD  Y+21,R30
000451 e000      	LDI  R16,LOW(0)
000452 322d      	CPI  R18,45
000453 f411      	BRNE _0x204003B
000454 e001      	LDI  R16,LOW(1)
000455 c1cf      	RJMP _0x2040035
                 _0x204003B:
000456 322b      	CPI  R18,43
000457 f419      	BRNE _0x204003C
000458 e2eb      	LDI  R30,LOW(43)
000459 8bed      	STD  Y+21,R30
00045a c1ca      	RJMP _0x2040035
                 _0x204003C:
00045b 3220      	CPI  R18,32
00045c f419      	BRNE _0x204003D
00045d e2e0      	LDI  R30,LOW(32)
00045e 8bed      	STD  Y+21,R30
00045f c1c5      	RJMP _0x2040035
                 _0x204003D:
000460 c002      	RJMP _0x204003E
                 _0x2040039:
000461 30e2      	CPI  R30,LOW(0x2)
000462 f439      	BRNE _0x204003F
                 _0x204003E:
000463 e050      	LDI  R21,LOW(0)
000464 e013      	LDI  R17,LOW(3)
000465 3320      	CPI  R18,48
000466 f411      	BRNE _0x2040040
000467 6800      	ORI  R16,LOW(128)
000468 c1bc      	RJMP _0x2040035
                 _0x2040040:
000469 c002      	RJMP _0x2040041
                 _0x204003F:
00046a 30e3      	CPI  R30,LOW(0x3)
00046b f491      	BRNE _0x2040042
                 _0x2040041:
00046c 3320      	CPI  R18,48
00046d f010      	BRLO _0x2040044
00046e 332a      	CPI  R18,58
00046f f008      	BRLO _0x2040045
                 _0x2040044:
000470 c007      	RJMP _0x2040043
                 _0x2040045:
000471 e0aa      	LDI  R26,LOW(10)
000472 9f5a      	MUL  R21,R26
000473 2d50      	MOV  R21,R0
000474 2fe2      	MOV  R30,R18
000475 53e0      	SUBI R30,LOW(48)
000476 0f5e      	ADD  R21,R30
000477 c1ad      	RJMP _0x2040035
                 _0x2040043:
000478 e040      	LDI  R20,LOW(0)
000479 322e      	CPI  R18,46
00047a f411      	BRNE _0x2040046
00047b e014      	LDI  R17,LOW(4)
00047c c1a8      	RJMP _0x2040035
                 _0x2040046:
00047d c00f      	RJMP _0x2040047
                 _0x2040042:
00047e 30e4      	CPI  R30,LOW(0x4)
00047f f499      	BRNE _0x2040049
000480 3320      	CPI  R18,48
000481 f010      	BRLO _0x204004B
000482 332a      	CPI  R18,58
000483 f008      	BRLO _0x204004C
                 _0x204004B:
000484 c008      	RJMP _0x204004A
                 _0x204004C:
000485 6200      	ORI  R16,LOW(32)
000486 e0aa      	LDI  R26,LOW(10)
000487 9f4a      	MUL  R20,R26
000488 2d40      	MOV  R20,R0
000489 2fe2      	MOV  R30,R18
00048a 53e0      	SUBI R30,LOW(48)
00048b 0f4e      	ADD  R20,R30
00048c c198      	RJMP _0x2040035
                 _0x204004A:
                 _0x2040047:
00048d 362c      	CPI  R18,108
00048e f419      	BRNE _0x204004D
00048f 6002      	ORI  R16,LOW(2)
000490 e015      	LDI  R17,LOW(5)
000491 c193      	RJMP _0x2040035
                 _0x204004D:
000492 c003      	RJMP _0x204004E
                 _0x2040049:
000493 30e5      	CPI  R30,LOW(0x5)
000494 f009      	BREQ PC+2
000495 c18f      	RJMP _0x2040035
                 _0x204004E:
000496 2fe2      	MOV  R30,R18
000497 36e3      	CPI  R30,LOW(0x63)
000498 f459      	BRNE _0x2040053
000499 940e 07f5 	CALL SUBOPT_0x22
00049b 940e 07fc 	CALL SUBOPT_0x23
00049d 940e 07f5 	CALL SUBOPT_0x22
00049f 81a4      	LDD  R26,Z+4
0004a0 93aa      	ST   -Y,R26
0004a1 940e 0803 	CALL SUBOPT_0x24
0004a3 c180      	RJMP _0x2040054
                 _0x2040053:
0004a4 34e5      	CPI  R30,LOW(0x45)
0004a5 f011      	BREQ _0x2040057
0004a6 36e5      	CPI  R30,LOW(0x65)
0004a7 f409      	BRNE _0x2040058
                 _0x2040057:
0004a8 c003      	RJMP _0x2040059
                 _0x2040058:
0004a9 36e6      	CPI  R30,LOW(0x66)
0004aa f009      	BREQ PC+2
0004ab c048      	RJMP _0x204005A
                 _0x2040059:
0004ac 01fe      	MOVW R30,R28
0004ad 9676      	ADIW R30,22
0004ae 87ee      	STD  Y+14,R30
0004af 87ff      	STD  Y+14+1,R31
0004b0 940e 0809 	CALL SUBOPT_0x25
0004b2 940e 0a72 	CALL __GETD1P
0004b4 940e 0810 	CALL SUBOPT_0x26
0004b6 940e 0815 	CALL SUBOPT_0x27
0004b8 85ad      	LDD  R26,Y+13
0004b9 23aa      	TST  R26
0004ba f032      	BRMI _0x204005B
0004bb 89ad      	LDD  R26,Y+21
0004bc 32ab      	CPI  R26,LOW(0x2B)
0004bd f059      	BREQ _0x204005D
0004be 32a0      	CPI  R26,LOW(0x20)
0004bf f081      	BREQ _0x204005F
0004c0 c017      	RJMP _0x2040060
                 _0x204005B:
0004c1 940e 0817 	CALL SUBOPT_0x28
0004c3 940e 085a 	CALL __ANEGF1
0004c5 940e 0810 	CALL SUBOPT_0x26
0004c7 e2ed      	LDI  R30,LOW(45)
0004c8 8bed      	STD  Y+21,R30
                 _0x204005D:
0004c9 ff07      	SBRS R16,7
0004ca c005      	RJMP _0x2040061
0004cb 89ed      	LDD  R30,Y+21
0004cc 93ea      	ST   -Y,R30
0004cd 940e 0803 	CALL SUBOPT_0x24
0004cf c008      	RJMP _0x2040062
                 _0x2040061:
                 _0x204005F:
0004d0 85ee      	LDD  R30,Y+14
0004d1 85ff      	LDD  R31,Y+14+1
0004d2 9631      	ADIW R30,1
0004d3 87ee      	STD  Y+14,R30
0004d4 87ff      	STD  Y+14+1,R31
0004d5 9731      	SBIW R30,1
0004d6 89ad      	LDD  R26,Y+21
0004d7 83a0      	STD  Z+0,R26
                 _0x2040062:
                 _0x2040060:
0004d8 ff05      	SBRS R16,5
0004d9 e046      	LDI  R20,LOW(6)
0004da 3626      	CPI  R18,102
0004db f451      	BRNE _0x2040064
0004dc 940e 0817 	CALL SUBOPT_0x28
0004de 940e 0a87 	CALL __PUTPARD1
0004e0 934a      	ST   -Y,R20
0004e1 89ab      	LDD  R26,Y+19
0004e2 89bc      	LDD  R27,Y+19+1
0004e3 940e 0233 	CALL _ftoa
0004e5 c009      	RJMP _0x2040065
                 _0x2040064:
0004e6 940e 0817 	CALL SUBOPT_0x28
0004e8 940e 0a87 	CALL __PUTPARD1
0004ea 934a      	ST   -Y,R20
0004eb 932a      	ST   -Y,R18
0004ec 89ac      	LDD  R26,Y+20
0004ed 89bd      	LDD  R27,Y+20+1
0004ee de40      	RCALL __ftoe_G102
                 _0x2040065:
0004ef 01fe      	MOVW R30,R28
0004f0 9676      	ADIW R30,22
0004f1 940e 081c 	CALL SUBOPT_0x29
0004f3 c01e      	RJMP _0x2040066
                 _0x204005A:
0004f4 37e3      	CPI  R30,LOW(0x73)
0004f5 f439      	BRNE _0x2040068
0004f6 940e 0815 	CALL SUBOPT_0x27
0004f8 940e 0824 	CALL SUBOPT_0x2A
0004fa 940e 081c 	CALL SUBOPT_0x29
0004fc c00e      	RJMP _0x2040069
                 _0x2040068:
0004fd 37e0      	CPI  R30,LOW(0x70)
0004fe f4c1      	BRNE _0x204006B
0004ff 940e 0815 	CALL SUBOPT_0x27
000501 940e 0824 	CALL SUBOPT_0x2A
000503 87ee      	STD  Y+14,R30
000504 87ff      	STD  Y+14+1,R31
000505 85ae      	LDD  R26,Y+14
000506 85bf      	LDD  R27,Y+14+1
000507 940e 06c4 	CALL _strlenf
000509 2f1e      	MOV  R17,R30
00050a 6008      	ORI  R16,LOW(8)
                 _0x2040069:
00050b 770f      	ANDI R16,LOW(127)
00050c 3040      	CPI  R20,0
00050d f011      	BREQ _0x204006D
00050e 1741      	CP   R20,R17
00050f f008      	BRLO _0x204006E
                 _0x204006D:
000510 c001      	RJMP _0x204006C
                 _0x204006E:
000511 2f14      	MOV  R17,R20
                 _0x204006C:
                 _0x2040066:
000512 e040      	LDI  R20,LOW(0)
000513 e0e0      	LDI  R30,LOW(0)
000514 8bec      	STD  Y+20,R30
000515 e030      	LDI  R19,LOW(0)
000516 c06d      	RJMP _0x204006F
                 _0x204006B:
000517 36e4      	CPI  R30,LOW(0x64)
000518 f011      	BREQ _0x2040072
000519 36e9      	CPI  R30,LOW(0x69)
00051a f411      	BRNE _0x2040073
                 _0x2040072:
00051b 6004      	ORI  R16,LOW(4)
00051c c002      	RJMP _0x2040074
                 _0x2040073:
00051d 37e5      	CPI  R30,LOW(0x75)
00051e f4a1      	BRNE _0x2040075
                 _0x2040074:
00051f e0ea      	LDI  R30,LOW(10)
000520 8bec      	STD  Y+20,R30
000521 ff01      	SBRS R16,1
000522 c008      	RJMP _0x2040076
                +
000523 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000524 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000525 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000526 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000527 940e 0829 	CALL SUBOPT_0x2B
000529 e01a      	LDI  R17,LOW(10)
00052a c022      	RJMP _0x2040077
                 _0x2040076:
                +
00052b e1e0     +LDI R30 , LOW ( 0x2710 )
00052c e2f7     +LDI R31 , HIGH ( 0x2710 )
00052d e060     +LDI R22 , BYTE3 ( 0x2710 )
00052e e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00052f 940e 0829 	CALL SUBOPT_0x2B
000531 e015      	LDI  R17,LOW(5)
000532 c01a      	RJMP _0x2040077
                 _0x2040075:
000533 35e8      	CPI  R30,LOW(0x58)
000534 f411      	BRNE _0x2040079
000535 6008      	ORI  R16,LOW(8)
000536 c003      	RJMP _0x204007A
                 _0x2040079:
000537 37e8      	CPI  R30,LOW(0x78)
000538 f009      	BREQ PC+2
000539 c0ea      	RJMP _0x20400B8
                 _0x204007A:
00053a e1e0      	LDI  R30,LOW(16)
00053b 8bec      	STD  Y+20,R30
00053c ff01      	SBRS R16,1
00053d c008      	RJMP _0x204007C
                +
00053e e0e0     +LDI R30 , LOW ( 0x10000000 )
00053f e0f0     +LDI R31 , HIGH ( 0x10000000 )
000540 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000541 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000542 940e 0829 	CALL SUBOPT_0x2B
000544 e018      	LDI  R17,LOW(8)
000545 c007      	RJMP _0x2040077
                 _0x204007C:
                +
000546 e0e0     +LDI R30 , LOW ( 0x1000 )
000547 e1f0     +LDI R31 , HIGH ( 0x1000 )
000548 e060     +LDI R22 , BYTE3 ( 0x1000 )
000549 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00054a 940e 0829 	CALL SUBOPT_0x2B
00054c e014      	LDI  R17,LOW(4)
                 _0x2040077:
00054d 3040      	CPI  R20,0
00054e f011      	BREQ _0x204007D
00054f 770f      	ANDI R16,LOW(127)
000550 c001      	RJMP _0x204007E
                 _0x204007D:
000551 e041      	LDI  R20,LOW(1)
                 _0x204007E:
000552 ff01      	SBRS R16,1
000553 c008      	RJMP _0x204007F
000554 940e 0815 	CALL SUBOPT_0x27
000556 940e 0809 	CALL SUBOPT_0x25
000558 9614      	ADIW R26,4
000559 940e 0a72 	CALL __GETD1P
00055b c00f      	RJMP _0x2040115
                 _0x204007F:
00055c ff02      	SBRS R16,2
00055d c007      	RJMP _0x2040081
00055e 940e 0815 	CALL SUBOPT_0x27
000560 940e 0824 	CALL SUBOPT_0x2A
000562 940e 0a15 	CALL __CWD1
000564 c006      	RJMP _0x2040115
                 _0x2040081:
000565 940e 0815 	CALL SUBOPT_0x27
000567 940e 0824 	CALL SUBOPT_0x2A
000569 2766      	CLR  R22
00056a 2777      	CLR  R23
                 _0x2040115:
                +
00056b 87ea     +STD Y + 10 , R30
00056c 87fb     +STD Y + 10 + 1 , R31
00056d 876c     +STD Y + 10 + 2 , R22
00056e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00056f ff02      	SBRS R16,2
000570 c012      	RJMP _0x2040083
000571 85ad      	LDD  R26,Y+13
000572 23aa      	TST  R26
000573 f442      	BRPL _0x2040084
000574 940e 0817 	CALL SUBOPT_0x28
000576 940e 0a07 	CALL __ANEGD1
000578 940e 0810 	CALL SUBOPT_0x26
00057a e2ed      	LDI  R30,LOW(45)
00057b 8bed      	STD  Y+21,R30
                 _0x2040084:
00057c 89ed      	LDD  R30,Y+21
00057d 30e0      	CPI  R30,0
00057e f019      	BREQ _0x2040085
00057f 5f1f      	SUBI R17,-LOW(1)
000580 5f4f      	SUBI R20,-LOW(1)
000581 c001      	RJMP _0x2040086
                 _0x2040085:
000582 7f0b      	ANDI R16,LOW(251)
                 _0x2040086:
                 _0x2040083:
000583 2f34      	MOV  R19,R20
                 _0x204006F:
000584 fd00      	SBRC R16,0
000585 c014      	RJMP _0x2040087
                 _0x2040088:
000586 1715      	CP   R17,R21
000587 f410      	BRSH _0x204008B
000588 1735      	CP   R19,R21
000589 f008      	BRLO _0x204008C
                 _0x204008B:
00058a c00f      	RJMP _0x204008A
                 _0x204008C:
00058b ff07      	SBRS R16,7
00058c c008      	RJMP _0x204008D
00058d ff02      	SBRS R16,2
00058e c004      	RJMP _0x204008E
00058f 7f0b      	ANDI R16,LOW(251)
000590 892d      	LDD  R18,Y+21
000591 5011      	SUBI R17,LOW(1)
000592 c001      	RJMP _0x204008F
                 _0x204008E:
000593 e320      	LDI  R18,LOW(48)
                 _0x204008F:
000594 c001      	RJMP _0x2040090
                 _0x204008D:
000595 e220      	LDI  R18,LOW(32)
                 _0x2040090:
000596 940e 07ee 	CALL SUBOPT_0x21
000598 5051      	SUBI R21,LOW(1)
000599 cfec      	RJMP _0x2040088
                 _0x204008A:
                 _0x2040087:
                 _0x2040091:
00059a 1714      	CP   R17,R20
00059b f490      	BRSH _0x2040093
00059c 6100      	ORI  R16,LOW(16)
00059d ff02      	SBRS R16,2
00059e c006      	RJMP _0x2040094
00059f 940e 082e 	CALL SUBOPT_0x2C
0005a1 f009      	BREQ _0x2040095
0005a2 5051      	SUBI R21,LOW(1)
                 _0x2040095:
0005a3 5011      	SUBI R17,LOW(1)
0005a4 5041      	SUBI R20,LOW(1)
                 _0x2040094:
0005a5 e3e0      	LDI  R30,LOW(48)
0005a6 93ea      	ST   -Y,R30
0005a7 940e 0803 	CALL SUBOPT_0x24
0005a9 3050      	CPI  R21,0
0005aa f009      	BREQ _0x2040096
0005ab 5051      	SUBI R21,LOW(1)
                 _0x2040096:
0005ac 5041      	SUBI R20,LOW(1)
0005ad cfec      	RJMP _0x2040091
                 _0x2040093:
0005ae 2f31      	MOV  R19,R17
0005af 89ec      	LDD  R30,Y+20
0005b0 30e0      	CPI  R30,0
0005b1 f4b9      	BRNE _0x2040097
                 _0x2040098:
0005b2 3030      	CPI  R19,0
0005b3 f0a1      	BREQ _0x204009A
0005b4 ff03      	SBRS R16,3
0005b5 c006      	RJMP _0x204009B
0005b6 85ee      	LDD  R30,Y+14
0005b7 85ff      	LDD  R31,Y+14+1
0005b8 9125      	LPM  R18,Z+
0005b9 87ee      	STD  Y+14,R30
0005ba 87ff      	STD  Y+14+1,R31
0005bb c005      	RJMP _0x204009C
                 _0x204009B:
0005bc 85ae      	LDD  R26,Y+14
0005bd 85bf      	LDD  R27,Y+14+1
0005be 912d      	LD   R18,X+
0005bf 87ae      	STD  Y+14,R26
0005c0 87bf      	STD  Y+14+1,R27
                 _0x204009C:
0005c1 940e 07ee 	CALL SUBOPT_0x21
0005c3 3050      	CPI  R21,0
0005c4 f009      	BREQ _0x204009D
0005c5 5051      	SUBI R21,LOW(1)
                 _0x204009D:
0005c6 5031      	SUBI R19,LOW(1)
0005c7 cfea      	RJMP _0x2040098
                 _0x204009A:
0005c8 c051      	RJMP _0x204009E
                 _0x2040097:
                 _0x20400A0:
0005c9 940e 0840 	CALL SUBOPT_0x2D
0005cb 940e 0a2d 	CALL __DIVD21U
0005cd 2f2e      	MOV  R18,R30
0005ce 302a      	CPI  R18,10
0005cf f030      	BRLO _0x20400A2
0005d0 ff03      	SBRS R16,3
0005d1 c002      	RJMP _0x20400A3
0005d2 5c29      	SUBI R18,-LOW(55)
0005d3 c001      	RJMP _0x20400A4
                 _0x20400A3:
0005d4 5a29      	SUBI R18,-LOW(87)
                 _0x20400A4:
0005d5 c001      	RJMP _0x20400A5
                 _0x20400A2:
0005d6 5d20      	SUBI R18,-LOW(48)
                 _0x20400A5:
0005d7 fd04      	SBRC R16,4
0005d8 c021      	RJMP _0x20400A7
0005d9 3321      	CPI  R18,49
0005da f460      	BRSH _0x20400A9
                +
0005db 89a8     +LDD R26 , Y + 16
0005dc 89b9     +LDD R27 , Y + 16 + 1
0005dd 898a     +LDD R24 , Y + 16 + 2
0005de 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0005df 30a1     +CPI R26 , LOW ( 0x1 )
0005e0 e0e0     +LDI R30 , HIGH ( 0x1 )
0005e1 07be     +CPC R27 , R30
0005e2 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0005e3 078e     +CPC R24 , R30
0005e4 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0005e5 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0005e6 f409      	BRNE _0x20400A8
                 _0x20400A9:
0005e7 c00b      	RJMP _0x20400AB
                 _0x20400A8:
0005e8 1743      	CP   R20,R19
0005e9 f440      	BRSH _0x2040116
0005ea 1753      	CP   R21,R19
0005eb f010      	BRLO _0x20400AE
0005ec ff00      	SBRS R16,0
0005ed c001      	RJMP _0x20400AF
                 _0x20400AE:
0005ee c010      	RJMP _0x20400AD
                 _0x20400AF:
0005ef e220      	LDI  R18,LOW(32)
0005f0 ff07      	SBRS R16,7
0005f1 c008      	RJMP _0x20400B0
                 _0x2040116:
0005f2 e320      	LDI  R18,LOW(48)
                 _0x20400AB:
0005f3 6100      	ORI  R16,LOW(16)
0005f4 ff02      	SBRS R16,2
0005f5 c004      	RJMP _0x20400B1
0005f6 940e 082e 	CALL SUBOPT_0x2C
0005f8 f009      	BREQ _0x20400B2
0005f9 5051      	SUBI R21,LOW(1)
                 _0x20400B2:
                 _0x20400B1:
                 _0x20400B0:
                 _0x20400A7:
0005fa 940e 07ee 	CALL SUBOPT_0x21
0005fc 3050      	CPI  R21,0
0005fd f009      	BREQ _0x20400B3
0005fe 5051      	SUBI R21,LOW(1)
                 _0x20400B3:
                 _0x20400AD:
0005ff 5031      	SUBI R19,LOW(1)
000600 940e 0840 	CALL SUBOPT_0x2D
000602 940e 0a5e 	CALL __MODD21U
000604 940e 0810 	CALL SUBOPT_0x26
000606 89ec      	LDD  R30,Y+20
                +
000607 89a8     +LDD R26 , Y + 16
000608 89b9     +LDD R27 , Y + 16 + 1
000609 898a     +LDD R24 , Y + 16 + 2
00060a 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00060b 27ff      	CLR  R31
00060c 2766      	CLR  R22
00060d 2777      	CLR  R23
00060e 940e 0a2d 	CALL __DIVD21U
000610 940e 0829 	CALL SUBOPT_0x2B
                +
000612 89e8     +LDD R30 , Y + 16
000613 89f9     +LDD R31 , Y + 16 + 1
000614 896a     +LDD R22 , Y + 16 + 2
000615 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000616 940e 0a9e 	CALL __CPD10
000618 f009      	BREQ _0x20400A1
000619 cfaf      	RJMP _0x20400A0
                 _0x20400A1:
                 _0x204009E:
00061a ff00      	SBRS R16,0
00061b c008      	RJMP _0x20400B4
                 _0x20400B5:
00061c 3050      	CPI  R21,0
00061d f031      	BREQ _0x20400B7
00061e 5051      	SUBI R21,LOW(1)
00061f e2e0      	LDI  R30,LOW(32)
000620 93ea      	ST   -Y,R30
000621 940e 0803 	CALL SUBOPT_0x24
000623 cff8      	RJMP _0x20400B5
                 _0x20400B7:
                 _0x20400B4:
                 _0x20400B8:
                 _0x2040054:
                 _0x2040114:
000624 e010      	LDI  R17,LOW(0)
                 _0x2040035:
000625 ce0c      	RJMP _0x2040030
                 _0x2040032:
000626 81ae      	LDD  R26,Y+6
000627 81bf      	LDD  R27,Y+6+1
000628 940e 0a6e 	CALL __GETW1P
00062a 940e 0aa9 	CALL __LOADLOCR6
00062c 96ef      	ADIW R28,63
00062d 966f      	ADIW R28,31
00062e 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00062f 92ff      	PUSH R15
000630 2ef8      	MOV  R15,R24
000631 9726      	SBIW R28,6
000632 940e 0aa4 	CALL __SAVELOCR4
000634 940e 0849 	CALL SUBOPT_0x2E
000636 9730      	SBIW R30,0
000637 f419      	BRNE _0x20400B9
000638 efef      	LDI  R30,LOW(65535)
000639 efff      	LDI  R31,HIGH(65535)
00063a c023      	RJMP _0x20C0002
                 _0x20400B9:
00063b 01de      	MOVW R26,R28
00063c 9616      	ADIW R26,6
00063d 940e 0a03 	CALL __ADDW2R15
00063f 018d      	MOVW R16,R26
000640 940e 0849 	CALL SUBOPT_0x2E
000642 83ee      	STD  Y+6,R30
000643 83ff      	STD  Y+6+1,R31
000644 e0e0      	LDI  R30,LOW(0)
000645 87e8      	STD  Y+8,R30
000646 87e9      	STD  Y+8+1,R30
000647 01de      	MOVW R26,R28
000648 961a      	ADIW R26,10
000649 940e 0a03 	CALL __ADDW2R15
00064b 940e 0a6e 	CALL __GETW1P
00064d 93fa      	ST   -Y,R31
00064e 93ea      	ST   -Y,R30
00064f 931a      	ST   -Y,R17
000650 930a      	ST   -Y,R16
000651 efe5      	LDI  R30,LOW(_put_buff_G102)
000652 e0f2      	LDI  R31,HIGH(_put_buff_G102)
000653 93fa      	ST   -Y,R31
000654 93ea      	ST   -Y,R30
000655 01de      	MOVW R26,R28
000656 961a      	ADIW R26,10
000657 ddbd      	RCALL __print_G102
000658 019f      	MOVW R18,R30
000659 81ae      	LDD  R26,Y+6
00065a 81bf      	LDD  R27,Y+6+1
00065b e0e0      	LDI  R30,LOW(0)
00065c 93ec      	ST   X,R30
00065d 01f9      	MOVW R30,R18
                 _0x20C0002:
00065e 940e 0aab 	CALL __LOADLOCR4
000660 962a      	ADIW R28,10
000661 90ff      	POP  R15
000662 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000663 940e 0a8c 	CALL __PUTPARD2
000665 817b         ldd  r23,y+3
000666 816a         ldd  r22,y+2
000667 81f9         ldd  r31,y+1
000668 81e8         ld   r30,y
000669 fb77         bst  r23,7
00066a 0f77         lsl  r23
00066b fd67         sbrc r22,7
00066c 6071         sbr  r23,1
00066d 2f97         mov  r25,r23
00066e 579e         subi r25,0x7e
00066f f081         breq __ftrunc0
000670 f078         brcs __ftrunc0
000671 3198         cpi  r25,24
000672 f490         brsh __ftrunc1
000673 27aa         clr  r26
000674 27bb         clr  r27
000675 2788         clr  r24
                 __ftrunc2:
000676 9408         sec
000677 9587         ror  r24
000678 95b7         ror  r27
000679 95a7         ror  r26
00067a 959a         dec  r25
00067b f7d1         brne __ftrunc2
00067c 23ea         and  r30,r26
00067d 23fb         and  r31,r27
00067e 2368         and  r22,r24
00067f c005         rjmp __ftrunc1
                 __ftrunc0:
000680 94e8         clt
000681 2777         clr  r23
000682 27ee         clr  r30
000683 27ff         clr  r31
000684 2766         clr  r22
                 __ftrunc1:
000685 776f         cbr  r22,0x80
000686 9576         lsr  r23
000687 f408         brcc __ftrunc3
000688 6860         sbr  r22,0x80
                 __ftrunc3:
000689 f977         bld  r23,7
00068a 91a9         ld   r26,y+
00068b 91b9         ld   r27,y+
00068c 9189         ld   r24,y+
00068d 9199         ld   r25,y+
00068e 17ea         cp   r30,r26
00068f 07fb         cpc  r31,r27
000690 0768         cpc  r22,r24
000691 0779         cpc  r23,r25
000692 fb97         bst  r25,7
000693 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000694 940e 0a8c 	CALL __PUTPARD2
000696 940e 0a7d 	CALL __GETD2S0
000698 940e 0663 	CALL _ftrunc
00069a 940e 0a82 	CALL __PUTD1S0
00069c f419          brne __floor1
                 __floor0:
00069d 940e 0a78 	CALL __GETD1S0
00069f c009      	RJMP _0x20C0001
                 __floor1:
0006a0 f7e6          brtc __floor0
0006a1 940e 0a78 	CALL __GETD1S0
                +
0006a3 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0006a4 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0006a5 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0006a6 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0006a7 940e 08f9 	CALL __SUBF12
                 _0x20C0001:
0006a9 9624      	ADIW R28,4
0006aa 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0006ab 93ba      	ST   -Y,R27
0006ac 93aa      	ST   -Y,R26
0006ad 91e9          ld   r30,y+
0006ae 91f9          ld   r31,y+
0006af 91a9          ld   r26,y+
0006b0 91b9          ld   r27,y+
0006b1 01cd          movw r24,r26
                 strcpyf0:
0006b2 9005      	lpm  r0,z+
0006b3 920d          st   x+,r0
0006b4 2000          tst  r0
0006b5 f7e1          brne strcpyf0
0006b6 01fc          movw r30,r24
0006b7 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0006b8 93ba      	ST   -Y,R27
0006b9 93aa      	ST   -Y,R26
0006ba 91a9          ld   r26,y+
0006bb 91b9          ld   r27,y+
0006bc 27ee          clr  r30
0006bd 27ff          clr  r31
                 strlen0:
0006be 916d          ld   r22,x+
0006bf 2366          tst  r22
0006c0 f011          breq strlen1
0006c1 9631          adiw r30,1
0006c2 cffb          rjmp strlen0
                 strlen1:
0006c3 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0006c4 93ba      	ST   -Y,R27
0006c5 93aa      	ST   -Y,R26
0006c6 27aa          clr  r26
0006c7 27bb          clr  r27
0006c8 91e9          ld   r30,y+
0006c9 91f9          ld   r31,y+
                 strlenf0:
0006ca 9005      	lpm  r0,z+
0006cb 2000          tst  r0
0006cc f011          breq strlenf1
0006cd 9611          adiw r26,1
0006ce cffb          rjmp strlenf0
                 strlenf1:
0006cf 01fd          movw r30,r26
0006d0 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _num0:
000260           	.BYTE 0x4
                 _num1:
000264           	.BYTE 0x4
                 _num2:
000268           	.BYTE 0x4
                 _buffer:
00026c           	.BYTE 0x20
                 __base_y_G100:
00028c           	.BYTE 0x4
                 __seed_G101:
000290           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
                +
0006d1 81e9     +LDD R30 , Y + 1
0006d2 81fa     +LDD R31 , Y + 1 + 1
0006d3 816b     +LDD R22 , Y + 1 + 2
0006d4 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
0006d5 81ad     +LDD R26 , Y + 5
0006d6 81be     +LDD R27 , Y + 5 + 1
0006d7 818f     +LDD R24 , Y + 5 + 2
0006d8 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
0006d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x1:
0006da e0e0      	LDI  R30,LOW(0)
0006db 93e0 0260 	STS  _num0,R30
0006dd 93e0 0261 	STS  _num0+1,R30
0006df 93e0 0262 	STS  _num0+2,R30
0006e1 93e0 0263 	STS  _num0+3,R30
                +
0006e3 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0006e4 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0006e5 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0006e6 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0006e7 93e0 0264 	STS  _num1,R30
0006e9 93f0 0265 	STS  _num1+1,R31
0006eb 9360 0266 	STS  _num1+2,R22
0006ed 9370 0267 	STS  _num1+3,R23
0006ef 93e0 0268 	STS  _num2,R30
0006f1 93e0 0269 	STS  _num2+1,R30
0006f3 93e0 026a 	STS  _num2+2,R30
0006f5 93e0 026b 	STS  _num2+3,R30
0006f7 e2eb      	LDI  R30,LOW(43)
0006f8 2e5e      	MOV  R5,R30
0006f9 e2ea      	LDI  R30,LOW(42)
0006fa 2e4e      	MOV  R4,R30
0006fb 2466      	CLR  R6
0006fc 2477      	CLR  R7
0006fd e0e1      	LDI  R30,LOW(1)
0006fe e0f0      	LDI  R31,HIGH(1)
0006ff 014f      	MOVW R8,R30
000700 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000701 e0e1      	LDI  R30,LOW(1)
000702 e0f0      	LDI  R31,HIGH(1)
000703 15e8      	CP   R30,R8
000704 05f9      	CPC  R31,R9
000705 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3:
000706 91e0 0264 	LDS  R30,_num1
000708 91f0 0265 	LDS  R31,_num1+1
00070a 9160 0266 	LDS  R22,_num1+2
00070c 9170 0267 	LDS  R23,_num1+3
00070e 940e 0a87 	CALL __PUTPARD1
000710 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x4:
000711 91e0 0268 	LDS  R30,_num2
000713 91f0 0269 	LDS  R31,_num2+1
000715 9160 026a 	LDS  R22,_num2+2
000717 9170 026b 	LDS  R23,_num2+3
000719 940e 0a87 	CALL __PUTPARD1
00071b 2da4      	MOV  R26,R4
00071c 940e 0076 	CALL _COMPUTE
00071e 93e0 0264 	STS  _num1,R30
000720 93f0 0265 	STS  _num1+1,R31
000722 9360 0266 	STS  _num1+2,R22
000724 9370 0267 	STS  _num1+3,R23
000726 e0e0      	LDI  R30,LOW(0)
000727 93e0 0268 	STS  _num2,R30
000729 93e0 0269 	STS  _num2+1,R30
00072b 93e0 026a 	STS  _num2+2,R30
00072d 93e0 026b 	STS  _num2+3,R30
00072f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
000730 91e0 0260 	LDS  R30,_num0
000732 91f0 0261 	LDS  R31,_num0+1
000734 9160 0262 	LDS  R22,_num0+2
000736 9170 0263 	LDS  R23,_num0+3
000738 940e 0a87 	CALL __PUTPARD1
00073a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00073b 2da5      	MOV  R26,R5
00073c 940e 0076 	CALL _COMPUTE
00073e 93e0 0260 	STS  _num0,R30
000740 93f0 0261 	STS  _num0+1,R31
000742 9360 0262 	STS  _num0+2,R22
000744 9370 0263 	STS  _num0+3,R23
000746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000747 91a0 0268 	LDS  R26,_num2
000749 91b0 0269 	LDS  R27,_num2+1
00074b 9180 026a 	LDS  R24,_num2+2
00074d 9190 026b 	LDS  R25,_num2+3
00074f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x8:
                +
000750 e0e0     +LDI R30 , LOW ( 0x41200000 )
000751 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000752 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000753 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000754 940e 0950 	CALL __MULF12
000756 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000757 93e0 0268 	STS  _num2,R30
000759 93f0 0269 	STS  _num2+1,R31
00075b 9360 026a 	STS  _num2+2,R22
00075d 9370 026b 	STS  _num2+3,R23
00075f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000760 940e 0a15 	CALL __CWD1
000762 940e 08c6 	CALL __CDF1
000764 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000765 9892      	CBI  0x12,2
000766 9893      	CBI  0x12,3
000767 e0a5      	LDI  R26,LOW(5)
000768 e0b0      	LDI  R27,0
000769 940c 0850 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
00076b 940e 01ba 	CALL __lcd_write_data
00076d e0a3      	LDI  R26,LOW(3)
00076e e0b0      	LDI  R27,0
00076f 940c 0850 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD:
000771 e3a0      	LDI  R26,LOW(48)
000772 940e 01a6 	CALL __lcd_write_nibble_G100
                +
000774 ec88     +LDI R24 , LOW ( 200 )
000775 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000776 9701     +SBIW R24 , 1
000777 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
000779 93ba      	ST   -Y,R27
00077a 93aa      	ST   -Y,R26
00077b 9724      	SBIW R28,4
00077c e0e0      	LDI  R30,LOW(0)
00077d 83e8      	ST   Y,R30
00077e 83e9      	STD  Y+1,R30
00077f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000780 81ee      	LDD  R30,Y+6
000781 81ff      	LDD  R31,Y+6+1
000782 93fa      	ST   -Y,R31
000783 93ea      	ST   -Y,R30
000784 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
000785 87e9     +STD Y + 9 , R30
000786 87fa     +STD Y + 9 + 1 , R31
000787 876b     +STD Y + 9 + 2 , R22
000788 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000789 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x11:
00078a 81ae      	LDD  R26,Y+6
00078b 81bf      	LDD  R27,Y+6+1
00078c 9611      	ADIW R26,1
00078d 83ae      	STD  Y+6,R26
00078e 83bf      	STD  Y+6+1,R27
00078f 9711      	SBIW R26,1
000790 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
                +
000791 81aa     +LDD R26 , Y + 2
000792 81bb     +LDD R27 , Y + 2 + 1
000793 818c     +LDD R24 , Y + 2 + 2
000794 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000795 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x13:
                +
000796 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000797 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000798 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000799 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00079a 940e 0950 	CALL __MULF12
00079c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
                +
00079d 83ea     +STD Y + 2 , R30
00079e 83fb     +STD Y + 2 + 1 , R31
00079f 836c     +STD Y + 2 + 2 , R22
0007a0 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0007a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15:
                +
0007a2 81ea     +LDD R30 , Y + 2
0007a3 81fb     +LDD R31 , Y + 2 + 1
0007a4 816c     +LDD R22 , Y + 2 + 2
0007a5 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0007a6 85a9     +LDD R26 , Y + 9
0007a7 85ba     +LDD R27 , Y + 9 + 1
0007a8 858b     +LDD R24 , Y + 9 + 2
0007a9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
0007ab e0a0     +LDI R26 , LOW ( 0x3F000000 )
0007ac e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0007ad e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0007ae e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0007af 940e 0900 	CALL __ADDF12
0007b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
                +
0007b2 85a9     +LDD R26 , Y + 9
0007b3 85ba     +LDD R27 , Y + 9 + 1
0007b4 858b     +LDD R24 , Y + 9 + 2
0007b5 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
0007b7 940e 0a91 	CALL __SWAPD12
0007b9 940e 08f9 	CALL __SUBF12
0007bb cfc9      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
0007bc 91ed      	LD   R30,X+
0007bd 91fd      	LD   R31,X+
0007be 9631      	ADIW R30,1
0007bf 93fe      	ST   -X,R31
0007c0 93ee      	ST   -X,R30
0007c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
                +
0007c2 81ac     +LDD R26 , Y + 4
0007c3 81bd     +LDD R27 , Y + 4 + 1
0007c4 818e     +LDD R24 , Y + 4 + 2
0007c5 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0007c6 cf89      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B:
                +
0007c7 83ec     +STD Y + 4 , R30
0007c8 83fd     +STD Y + 4 + 1 , R31
0007c9 836e     +STD Y + 4 + 2 , R22
0007ca 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0007cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
                +
0007cc 81ec     +LDD R30 , Y + 4
0007cd 81fd     +LDD R31 , Y + 4 + 1
0007ce 816e     +LDD R22 , Y + 4 + 2
0007cf 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0007d0 85ac     +LDD R26 , Y + 12
0007d1 85bd     +LDD R27 , Y + 12 + 1
0007d2 858e     +LDD R24 , Y + 12 + 2
0007d3 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007d4 940e 09e3 	CALL __CMPF12
0007d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
0007d7 85ac     +LDD R26 , Y + 12
0007d8 85bd     +LDD R27 , Y + 12 + 1
0007d9 858e     +LDD R24 , Y + 12 + 2
0007da 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
0007dc 87ec     +STD Y + 12 , R30
0007dd 87fd     +STD Y + 12 + 1 , R31
0007de 876e     +STD Y + 12 + 2 , R22
0007df 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
0007e1 85a8      	LDD  R26,Y+8
0007e2 85b9      	LDD  R27,Y+8+1
0007e3 9611      	ADIW R26,1
0007e4 87a8      	STD  Y+8,R26
0007e5 87b9      	STD  Y+8+1,R27
0007e6 9711      	SBIW R26,1
0007e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x20:
0007e8 85e8      	LDD  R30,Y+8
0007e9 85f9      	LDD  R31,Y+8+1
0007ea 9631      	ADIW R30,1
0007eb 87e8      	STD  Y+8,R30
0007ec 87f9      	STD  Y+8+1,R31
0007ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
0007ee 932a      	ST   -Y,R18
0007ef 81af      	LDD  R26,Y+7
0007f0 85b8      	LDD  R27,Y+7+1
0007f1 85e9      	LDD  R30,Y+9
0007f2 85fa      	LDD  R31,Y+9+1
0007f3 9509      	ICALL
0007f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x22:
                +
0007f5 01fe     +MOVW R30 , R28
0007f6 5ae6     +SUBI R30 , LOW ( - 90 )
0007f7 4fff     +SBCI R31 , HIGH ( - 90 )
0007f8 9001     +LD R0 , Z +
0007f9 81f0     +LD R31 , Z
0007fa 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x23:
0007fc 9734      	SBIW R30,4
                +
0007fd 01de     +MOVW R26 , R28
0007fe 5aa6     +SUBI R26 , LOW ( - 90 )
0007ff 4fbf     +SBCI R27 , HIGH ( - 90 )
000800 93ed     +ST X + , R30
000801 93fc     +ST X , R31
                 	__PUTW1SX 90
000802 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
000803 81af      	LDD  R26,Y+7
000804 85b8      	LDD  R27,Y+7+1
000805 85e9      	LDD  R30,Y+9
000806 85fa      	LDD  R31,Y+9+1
000807 9509      	ICALL
000808 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x25:
                +
000809 01de     +MOVW R26 , R28
00080a 5aa6     +SUBI R26 , LOW ( - 90 )
00080b 4fbf     +SBCI R27 , HIGH ( - 90 )
00080c 900d     +LD R0 , X +
00080d 91bc     +LD R27 , X
00080e 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00080f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
000810 87ea     +STD Y + 10 , R30
000811 87fb     +STD Y + 10 + 1 , R31
000812 876c     +STD Y + 10 + 2 , R22
000813 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000814 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x27:
000815 dfdf      	RCALL SUBOPT_0x22
000816 cfe5      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
                +
000817 85ea     +LDD R30 , Y + 10
000818 85fb     +LDD R31 , Y + 10 + 1
000819 856c     +LDD R22 , Y + 10 + 2
00081a 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00081b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x29:
00081c 87ee      	STD  Y+14,R30
00081d 87ff      	STD  Y+14+1,R31
00081e 85ae      	LDD  R26,Y+14
00081f 85bf      	LDD  R27,Y+14+1
000820 940e 06b8 	CALL _strlen
000822 2f1e      	MOV  R17,R30
000823 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
000824 dfe4      	RCALL SUBOPT_0x25
000825 9614      	ADIW R26,4
000826 940e 0a6e 	CALL __GETW1P
000828 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
                +
000829 8be8     +STD Y + 16 , R30
00082a 8bf9     +STD Y + 16 + 1 , R31
00082b 8b6a     +STD Y + 16 + 2 , R22
00082c 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00082d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2C:
00082e 7f0b      	ANDI R16,LOW(251)
00082f 89ed      	LDD  R30,Y+21
000830 93ea      	ST   -Y,R30
                +
000831 01de     +MOVW R26 , R28
000832 5aa9     +SUBI R26 , LOW ( - 87 )
000833 4fbf     +SBCI R27 , HIGH ( - 87 )
000834 900d     +LD R0 , X +
000835 91bc     +LD R27 , X
000836 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000837 01fe     +MOVW R30 , R28
000838 5ae7     +SUBI R30 , LOW ( - 89 )
000839 4fff     +SBCI R31 , HIGH ( - 89 )
00083a 9001     +LD R0 , Z +
00083b 81f0     +LD R31 , Z
00083c 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00083d 9509      	ICALL
00083e 3050      	CPI  R21,0
00083f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
                +
000840 89e8     +LDD R30 , Y + 16
000841 89f9     +LDD R31 , Y + 16 + 1
000842 896a     +LDD R22 , Y + 16 + 2
000843 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000844 85aa     +LDD R26 , Y + 10
000845 85bb     +LDD R27 , Y + 10 + 1
000846 858c     +LDD R24 , Y + 10 + 2
000847 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000848 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
000849 01de      	MOVW R26,R28
00084a 961c      	ADIW R26,12
00084b 940e 0a03 	CALL __ADDW2R15
00084d 940e 0a6e 	CALL __GETW1P
00084f 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000850 9610      	adiw r26,0
000851 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000852 ed80     +LDI R24 , LOW ( 0x7D0 )
000853 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000854 9701     +SBIW R24 , 1
000855 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000856 95a8      	wdr
000857 9711      	sbiw r26,1
000858 f7c9      	brne __delay_ms0
                 __delay_ms1:
000859 9508      	ret
                 
                 __ANEGF1:
00085a 9730      	SBIW R30,0
00085b 4060      	SBCI R22,0
00085c 4070      	SBCI R23,0
00085d f009      	BREQ __ANEGF10
00085e 5870      	SUBI R23,0x80
                 __ANEGF10:
00085f 9508      	RET
                 
                 __ROUND_REPACK:
000860 2355      	TST  R21
000861 f442      	BRPL __REPACK
000862 3850      	CPI  R21,0x80
000863 f411      	BRNE __ROUND_REPACK0
000864 ffe0      	SBRS R30,0
000865 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000866 9631      	ADIW R30,1
000867 1f69      	ADC  R22,R25
000868 1f79      	ADC  R23,R25
000869 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00086a e850      	LDI  R21,0x80
00086b 2757      	EOR  R21,R23
00086c f411      	BRNE __REPACK0
00086d 935f      	PUSH R21
00086e c0cf      	RJMP __ZERORES
                 __REPACK0:
00086f 3f5f      	CPI  R21,0xFF
000870 f031      	BREQ __REPACK1
000871 0f66      	LSL  R22
000872 0c00      	LSL  R0
000873 9557      	ROR  R21
000874 9567      	ROR  R22
000875 2f75      	MOV  R23,R21
000876 9508      	RET
                 __REPACK1:
000877 935f      	PUSH R21
000878 2000      	TST  R0
000879 f00a      	BRMI __REPACK2
00087a c0cf      	RJMP __MAXRES
                 __REPACK2:
00087b c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00087c e850      	LDI  R21,0x80
00087d 2e19      	MOV  R1,R25
00087e 2215      	AND  R1,R21
00087f 0f88      	LSL  R24
000880 1f99      	ROL  R25
000881 2795      	EOR  R25,R21
000882 0f55      	LSL  R21
000883 9587      	ROR  R24
                 
                 __UNPACK1:
000884 e850      	LDI  R21,0x80
000885 2e07      	MOV  R0,R23
000886 2205      	AND  R0,R21
000887 0f66      	LSL  R22
000888 1f77      	ROL  R23
000889 2775      	EOR  R23,R21
00088a 0f55      	LSL  R21
00088b 9567      	ROR  R22
00088c 9508      	RET
                 
                 __CFD1U:
00088d 9468      	SET
00088e c001      	RJMP __CFD1U0
                 __CFD1:
00088f 94e8      	CLT
                 __CFD1U0:
000890 935f      	PUSH R21
000891 dff2      	RCALL __UNPACK1
000892 3870      	CPI  R23,0x80
000893 f018      	BRLO __CFD10
000894 3f7f      	CPI  R23,0xFF
000895 f408      	BRCC __CFD10
000896 c0a7      	RJMP __ZERORES
                 __CFD10:
000897 e156      	LDI  R21,22
000898 1b57      	SUB  R21,R23
000899 f4aa      	BRPL __CFD11
00089a 9551      	NEG  R21
00089b 3058      	CPI  R21,8
00089c f40e      	BRTC __CFD19
00089d 3059      	CPI  R21,9
                 __CFD19:
00089e f030      	BRLO __CFD17
00089f efef      	SER  R30
0008a0 efff      	SER  R31
0008a1 ef6f      	SER  R22
0008a2 e77f      	LDI  R23,0x7F
0008a3 f977      	BLD  R23,7
0008a4 c01a      	RJMP __CFD15
                 __CFD17:
0008a5 2777      	CLR  R23
0008a6 2355      	TST  R21
0008a7 f0b9      	BREQ __CFD15
                 __CFD18:
0008a8 0fee      	LSL  R30
0008a9 1fff      	ROL  R31
0008aa 1f66      	ROL  R22
0008ab 1f77      	ROL  R23
0008ac 955a      	DEC  R21
0008ad f7d1      	BRNE __CFD18
0008ae c010      	RJMP __CFD15
                 __CFD11:
0008af 2777      	CLR  R23
                 __CFD12:
0008b0 3058      	CPI  R21,8
0008b1 f028      	BRLO __CFD13
0008b2 2fef      	MOV  R30,R31
0008b3 2ff6      	MOV  R31,R22
0008b4 2f67      	MOV  R22,R23
0008b5 5058      	SUBI R21,8
0008b6 cff9      	RJMP __CFD12
                 __CFD13:
0008b7 2355      	TST  R21
0008b8 f031      	BREQ __CFD15
                 __CFD14:
0008b9 9576      	LSR  R23
0008ba 9567      	ROR  R22
0008bb 95f7      	ROR  R31
0008bc 95e7      	ROR  R30
0008bd 955a      	DEC  R21
0008be f7d1      	BRNE __CFD14
                 __CFD15:
0008bf 2000      	TST  R0
0008c0 f40a      	BRPL __CFD16
0008c1 d145      	RCALL __ANEGD1
                 __CFD16:
0008c2 915f      	POP  R21
0008c3 9508      	RET
                 
                 __CDF1U:
0008c4 9468      	SET
0008c5 c001      	RJMP __CDF1U0
                 __CDF1:
0008c6 94e8      	CLT
                 __CDF1U0:
0008c7 9730      	SBIW R30,0
0008c8 4060      	SBCI R22,0
0008c9 4070      	SBCI R23,0
0008ca f0b1      	BREQ __CDF10
0008cb 2400      	CLR  R0
0008cc f026      	BRTS __CDF11
0008cd 2377      	TST  R23
0008ce f412      	BRPL __CDF11
0008cf 9400      	COM  R0
0008d0 d136      	RCALL __ANEGD1
                 __CDF11:
0008d1 2e17      	MOV  R1,R23
0008d2 e17e      	LDI  R23,30
0008d3 2011      	TST  R1
                 __CDF12:
0008d4 f032      	BRMI __CDF13
0008d5 957a      	DEC  R23
0008d6 0fee      	LSL  R30
0008d7 1fff      	ROL  R31
0008d8 1f66      	ROL  R22
0008d9 1c11      	ROL  R1
0008da cff9      	RJMP __CDF12
                 __CDF13:
0008db 2fef      	MOV  R30,R31
0008dc 2ff6      	MOV  R31,R22
0008dd 2d61      	MOV  R22,R1
0008de 935f      	PUSH R21
0008df df8a      	RCALL __REPACK
0008e0 915f      	POP  R21
                 __CDF10:
0008e1 9508      	RET
                 
                 __SWAPACC:
0008e2 934f      	PUSH R20
0008e3 01af      	MOVW R20,R30
0008e4 01fd      	MOVW R30,R26
0008e5 01da      	MOVW R26,R20
0008e6 01ab      	MOVW R20,R22
0008e7 01bc      	MOVW R22,R24
0008e8 01ca      	MOVW R24,R20
0008e9 2d40      	MOV  R20,R0
0008ea 2c01      	MOV  R0,R1
0008eb 2e14      	MOV  R1,R20
0008ec 914f      	POP  R20
0008ed 9508      	RET
                 
                 __UADD12:
0008ee 0fea      	ADD  R30,R26
0008ef 1ffb      	ADC  R31,R27
0008f0 1f68      	ADC  R22,R24
0008f1 9508      	RET
                 
                 __NEGMAN1:
0008f2 95e0      	COM  R30
0008f3 95f0      	COM  R31
0008f4 9560      	COM  R22
0008f5 5fef      	SUBI R30,-1
0008f6 4fff      	SBCI R31,-1
0008f7 4f6f      	SBCI R22,-1
0008f8 9508      	RET
                 
                 __SUBF12:
0008f9 935f      	PUSH R21
0008fa df81      	RCALL __UNPACK
0008fb 3890      	CPI  R25,0x80
0008fc f171      	BREQ __ADDF129
0008fd e850      	LDI  R21,0x80
0008fe 2615      	EOR  R1,R21
                 
0008ff c004      	RJMP __ADDF120
                 
                 __ADDF12:
000900 935f      	PUSH R21
000901 df7a      	RCALL __UNPACK
000902 3890      	CPI  R25,0x80
000903 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000904 3870      	CPI  R23,0x80
000905 f121      	BREQ __ADDF128
                 __ADDF121:
000906 2f57      	MOV  R21,R23
000907 1b59      	SUB  R21,R25
000908 f12b      	BRVS __ADDF1211
000909 f412      	BRPL __ADDF122
00090a dfd7      	RCALL __SWAPACC
00090b cffa      	RJMP __ADDF121
                 __ADDF122:
00090c 3158      	CPI  R21,24
00090d f018      	BRLO __ADDF123
00090e 27aa      	CLR  R26
00090f 27bb      	CLR  R27
000910 2788      	CLR  R24
                 __ADDF123:
000911 3058      	CPI  R21,8
000912 f028      	BRLO __ADDF124
000913 2fab      	MOV  R26,R27
000914 2fb8      	MOV  R27,R24
000915 2788      	CLR  R24
000916 5058      	SUBI R21,8
000917 cff9      	RJMP __ADDF123
                 __ADDF124:
000918 2355      	TST  R21
000919 f029      	BREQ __ADDF126
                 __ADDF125:
00091a 9586      	LSR  R24
00091b 95b7      	ROR  R27
00091c 95a7      	ROR  R26
00091d 955a      	DEC  R21
00091e f7d9      	BRNE __ADDF125
                 __ADDF126:
00091f 2d50      	MOV  R21,R0
000920 2551      	EOR  R21,R1
000921 f072      	BRMI __ADDF127
000922 dfcb      	RCALL __UADD12
000923 f438      	BRCC __ADDF129
000924 9567      	ROR  R22
000925 95f7      	ROR  R31
000926 95e7      	ROR  R30
000927 9573      	INC  R23
000928 f413      	BRVC __ADDF129
000929 c020      	RJMP __MAXRES
                 __ADDF128:
00092a dfb7      	RCALL __SWAPACC
                 __ADDF129:
00092b df3e      	RCALL __REPACK
00092c 915f      	POP  R21
00092d 9508      	RET
                 __ADDF1211:
00092e f7d8      	BRCC __ADDF128
00092f cffb      	RJMP __ADDF129
                 __ADDF127:
000930 1bea      	SUB  R30,R26
000931 0bfb      	SBC  R31,R27
000932 0b68      	SBC  R22,R24
000933 f051      	BREQ __ZERORES
000934 f410      	BRCC __ADDF1210
000935 9400      	COM  R0
000936 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000937 2366      	TST  R22
000938 f392      	BRMI __ADDF129
000939 0fee      	LSL  R30
00093a 1fff      	ROL  R31
00093b 1f66      	ROL  R22
00093c 957a      	DEC  R23
00093d f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00093e 27ee      	CLR  R30
00093f 27ff      	CLR  R31
000940 2766      	CLR  R22
000941 2777      	CLR  R23
000942 915f      	POP  R21
000943 9508      	RET
                 
                 __MINRES:
000944 efef      	SER  R30
000945 efff      	SER  R31
000946 e76f      	LDI  R22,0x7F
000947 ef7f      	SER  R23
000948 915f      	POP  R21
000949 9508      	RET
                 
                 __MAXRES:
00094a efef      	SER  R30
00094b efff      	SER  R31
00094c e76f      	LDI  R22,0x7F
00094d e77f      	LDI  R23,0x7F
00094e 915f      	POP  R21
00094f 9508      	RET
                 
                 __MULF12:
000950 935f      	PUSH R21
000951 df2a      	RCALL __UNPACK
000952 3870      	CPI  R23,0x80
000953 f351      	BREQ __ZERORES
000954 3890      	CPI  R25,0x80
000955 f341      	BREQ __ZERORES
000956 2401      	EOR  R0,R1
000957 9408      	SEC
000958 1f79      	ADC  R23,R25
000959 f423      	BRVC __MULF124
00095a f31c      	BRLT __ZERORES
                 __MULF125:
00095b 2000      	TST  R0
00095c f33a      	BRMI __MINRES
00095d cfec      	RJMP __MAXRES
                 __MULF124:
00095e 920f      	PUSH R0
00095f 931f      	PUSH R17
000960 932f      	PUSH R18
000961 933f      	PUSH R19
000962 934f      	PUSH R20
000963 2711      	CLR  R17
000964 2722      	CLR  R18
000965 2799      	CLR  R25
000966 9f68      	MUL  R22,R24
000967 01a0      	MOVW R20,R0
000968 9f8f      	MUL  R24,R31
000969 2d30      	MOV  R19,R0
00096a 0d41      	ADD  R20,R1
00096b 1f59      	ADC  R21,R25
00096c 9f6b      	MUL  R22,R27
00096d 0d30      	ADD  R19,R0
00096e 1d41      	ADC  R20,R1
00096f 1f59      	ADC  R21,R25
000970 9f8e      	MUL  R24,R30
000971 d027      	RCALL __MULF126
000972 9fbf      	MUL  R27,R31
000973 d025      	RCALL __MULF126
000974 9f6a      	MUL  R22,R26
000975 d023      	RCALL __MULF126
000976 9fbe      	MUL  R27,R30
000977 d01d      	RCALL __MULF127
000978 9faf      	MUL  R26,R31
000979 d01b      	RCALL __MULF127
00097a 9fae      	MUL  R26,R30
00097b 0d11      	ADD  R17,R1
00097c 1f29      	ADC  R18,R25
00097d 1f39      	ADC  R19,R25
00097e 1f49      	ADC  R20,R25
00097f 1f59      	ADC  R21,R25
000980 2fe3      	MOV  R30,R19
000981 2ff4      	MOV  R31,R20
000982 2f65      	MOV  R22,R21
000983 2f52      	MOV  R21,R18
000984 914f      	POP  R20
000985 913f      	POP  R19
000986 912f      	POP  R18
000987 911f      	POP  R17
000988 900f      	POP  R0
000989 2366      	TST  R22
00098a f02a      	BRMI __MULF122
00098b 0f55      	LSL  R21
00098c 1fee      	ROL  R30
00098d 1fff      	ROL  R31
00098e 1f66      	ROL  R22
00098f c002      	RJMP __MULF123
                 __MULF122:
000990 9573      	INC  R23
000991 f24b      	BRVS __MULF125
                 __MULF123:
000992 decd      	RCALL __ROUND_REPACK
000993 915f      	POP  R21
000994 9508      	RET
                 
                 __MULF127:
000995 0d10      	ADD  R17,R0
000996 1d21      	ADC  R18,R1
000997 1f39      	ADC  R19,R25
000998 c002      	RJMP __MULF128
                 __MULF126:
000999 0d20      	ADD  R18,R0
00099a 1d31      	ADC  R19,R1
                 __MULF128:
00099b 1f49      	ADC  R20,R25
00099c 1f59      	ADC  R21,R25
00099d 9508      	RET
                 
                 __DIVF21:
00099e 935f      	PUSH R21
00099f dedc      	RCALL __UNPACK
0009a0 3870      	CPI  R23,0x80
0009a1 f421      	BRNE __DIVF210
0009a2 2011      	TST  R1
                 __DIVF211:
0009a3 f40a      	BRPL __DIVF219
0009a4 cf9f      	RJMP __MINRES
                 __DIVF219:
0009a5 cfa4      	RJMP __MAXRES
                 __DIVF210:
0009a6 3890      	CPI  R25,0x80
0009a7 f409      	BRNE __DIVF218
                 __DIVF217:
0009a8 cf95      	RJMP __ZERORES
                 __DIVF218:
0009a9 2401      	EOR  R0,R1
0009aa 9408      	SEC
0009ab 0b97      	SBC  R25,R23
0009ac f41b      	BRVC __DIVF216
0009ad f3d4      	BRLT __DIVF217
0009ae 2000      	TST  R0
0009af cff3      	RJMP __DIVF211
                 __DIVF216:
0009b0 2f79      	MOV  R23,R25
0009b1 931f      	PUSH R17
0009b2 932f      	PUSH R18
0009b3 933f      	PUSH R19
0009b4 934f      	PUSH R20
0009b5 2411      	CLR  R1
0009b6 2711      	CLR  R17
0009b7 2722      	CLR  R18
0009b8 2733      	CLR  R19
0009b9 2744      	CLR  R20
0009ba 2755      	CLR  R21
0009bb e290      	LDI  R25,32
                 __DIVF212:
0009bc 17ae      	CP   R26,R30
0009bd 07bf      	CPC  R27,R31
0009be 0786      	CPC  R24,R22
0009bf 0741      	CPC  R20,R17
0009c0 f030      	BRLO __DIVF213
0009c1 1bae      	SUB  R26,R30
0009c2 0bbf      	SBC  R27,R31
0009c3 0b86      	SBC  R24,R22
0009c4 0b41      	SBC  R20,R17
0009c5 9408      	SEC
0009c6 c001      	RJMP __DIVF214
                 __DIVF213:
0009c7 9488      	CLC
                 __DIVF214:
0009c8 1f55      	ROL  R21
0009c9 1f22      	ROL  R18
0009ca 1f33      	ROL  R19
0009cb 1c11      	ROL  R1
0009cc 1faa      	ROL  R26
0009cd 1fbb      	ROL  R27
0009ce 1f88      	ROL  R24
0009cf 1f44      	ROL  R20
0009d0 959a      	DEC  R25
0009d1 f751      	BRNE __DIVF212
0009d2 01f9      	MOVW R30,R18
0009d3 2d61      	MOV  R22,R1
0009d4 914f      	POP  R20
0009d5 913f      	POP  R19
0009d6 912f      	POP  R18
0009d7 911f      	POP  R17
0009d8 2366      	TST  R22
0009d9 f032      	BRMI __DIVF215
0009da 0f55      	LSL  R21
0009db 1fee      	ROL  R30
0009dc 1fff      	ROL  R31
0009dd 1f66      	ROL  R22
0009de 957a      	DEC  R23
0009df f243      	BRVS __DIVF217
                 __DIVF215:
0009e0 de7f      	RCALL __ROUND_REPACK
0009e1 915f      	POP  R21
0009e2 9508      	RET
                 
                 __CMPF12:
0009e3 2399      	TST  R25
0009e4 f09a      	BRMI __CMPF120
0009e5 2377      	TST  R23
0009e6 f042      	BRMI __CMPF121
0009e7 1797      	CP   R25,R23
0009e8 f048      	BRLO __CMPF122
0009e9 f429      	BRNE __CMPF121
0009ea 17ae      	CP   R26,R30
0009eb 07bf      	CPC  R27,R31
0009ec 0786      	CPC  R24,R22
0009ed f020      	BRLO __CMPF122
0009ee f031      	BREQ __CMPF123
                 __CMPF121:
0009ef 9498      	CLZ
0009f0 9488      	CLC
0009f1 9508      	RET
                 __CMPF122:
0009f2 9498      	CLZ
0009f3 9408      	SEC
0009f4 9508      	RET
                 __CMPF123:
0009f5 9418      	SEZ
0009f6 9488      	CLC
0009f7 9508      	RET
                 __CMPF120:
0009f8 2377      	TST  R23
0009f9 f7c2      	BRPL __CMPF122
0009fa 1797      	CP   R25,R23
0009fb f398      	BRLO __CMPF121
0009fc f7a9      	BRNE __CMPF122
0009fd 17ea      	CP   R30,R26
0009fe 07fb      	CPC  R31,R27
0009ff 0768      	CPC  R22,R24
000a00 f388      	BRLO __CMPF122
000a01 f399      	BREQ __CMPF123
000a02 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000a03 2400      	CLR  R0
000a04 0daf      	ADD  R26,R15
000a05 1db0      	ADC  R27,R0
000a06 9508      	RET
                 
                 __ANEGD1:
000a07 95f0      	COM  R31
000a08 9560      	COM  R22
000a09 9570      	COM  R23
000a0a 95e1      	NEG  R30
000a0b 4fff      	SBCI R31,-1
000a0c 4f6f      	SBCI R22,-1
000a0d 4f7f      	SBCI R23,-1
000a0e 9508      	RET
                 
                 __CBD1:
000a0f 2ffe      	MOV  R31,R30
000a10 0fff      	ADD  R31,R31
000a11 0bff      	SBC  R31,R31
000a12 2f6f      	MOV  R22,R31
000a13 2f7f      	MOV  R23,R31
000a14 9508      	RET
                 
                 __CWD1:
000a15 2f6f      	MOV  R22,R31
000a16 0f66      	ADD  R22,R22
000a17 0b66      	SBC  R22,R22
000a18 2f76      	MOV  R23,R22
000a19 9508      	RET
                 
                 __DIVB21U:
000a1a 2400      	CLR  R0
000a1b e098      	LDI  R25,8
                 __DIVB21U1:
000a1c 0faa      	LSL  R26
000a1d 1c00      	ROL  R0
000a1e 1a0e      	SUB  R0,R30
000a1f f410      	BRCC __DIVB21U2
000a20 0e0e      	ADD  R0,R30
000a21 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000a22 60a1      	SBR  R26,1
                 __DIVB21U3:
000a23 959a      	DEC  R25
000a24 f7b9      	BRNE __DIVB21U1
000a25 2fea      	MOV  R30,R26
000a26 2da0      	MOV  R26,R0
000a27 9508      	RET
                 
                 __DIVB21:
000a28 d039      	RCALL __CHKSIGNB
000a29 dff0      	RCALL __DIVB21U
000a2a f40e      	BRTC __DIVB211
000a2b 95e1      	NEG  R30
                 __DIVB211:
000a2c 9508      	RET
                 
                 __DIVD21U:
000a2d 933f      	PUSH R19
000a2e 934f      	PUSH R20
000a2f 935f      	PUSH R21
000a30 2400      	CLR  R0
000a31 2411      	CLR  R1
000a32 2744      	CLR  R20
000a33 2755      	CLR  R21
000a34 e230      	LDI  R19,32
                 __DIVD21U1:
000a35 0faa      	LSL  R26
000a36 1fbb      	ROL  R27
000a37 1f88      	ROL  R24
000a38 1f99      	ROL  R25
000a39 1c00      	ROL  R0
000a3a 1c11      	ROL  R1
000a3b 1f44      	ROL  R20
000a3c 1f55      	ROL  R21
000a3d 1a0e      	SUB  R0,R30
000a3e 0a1f      	SBC  R1,R31
000a3f 0b46      	SBC  R20,R22
000a40 0b57      	SBC  R21,R23
000a41 f428      	BRCC __DIVD21U2
000a42 0e0e      	ADD  R0,R30
000a43 1e1f      	ADC  R1,R31
000a44 1f46      	ADC  R20,R22
000a45 1f57      	ADC  R21,R23
000a46 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000a47 60a1      	SBR  R26,1
                 __DIVD21U3:
000a48 953a      	DEC  R19
000a49 f759      	BRNE __DIVD21U1
000a4a 01fd      	MOVW R30,R26
000a4b 01bc      	MOVW R22,R24
000a4c 01d0      	MOVW R26,R0
000a4d 01ca      	MOVW R24,R20
000a4e 915f      	POP  R21
000a4f 914f      	POP  R20
000a50 913f      	POP  R19
000a51 9508      	RET
                 
                 __MODB21:
000a52 94e8      	CLT
000a53 ffa7      	SBRS R26,7
000a54 c002      	RJMP __MODB211
000a55 95a1      	NEG  R26
000a56 9468      	SET
                 __MODB211:
000a57 fde7      	SBRC R30,7
000a58 95e1      	NEG  R30
000a59 dfc0      	RCALL __DIVB21U
000a5a 2fea      	MOV  R30,R26
000a5b f40e      	BRTC __MODB212
000a5c 95e1      	NEG  R30
                 __MODB212:
000a5d 9508      	RET
                 
                 __MODD21U:
000a5e dfce      	RCALL __DIVD21U
000a5f 01fd      	MOVW R30,R26
000a60 01bc      	MOVW R22,R24
000a61 9508      	RET
                 
                 __CHKSIGNB:
000a62 94e8      	CLT
000a63 ffe7      	SBRS R30,7
000a64 c002      	RJMP __CHKSB1
000a65 95e1      	NEG  R30
000a66 9468      	SET
                 __CHKSB1:
000a67 ffa7      	SBRS R26,7
000a68 c004      	RJMP __CHKSB2
000a69 95a1      	NEG  R26
000a6a f800      	BLD  R0,0
000a6b 9403      	INC  R0
000a6c fa00      	BST  R0,0
                 __CHKSB2:
000a6d 9508      	RET
                 
                 __GETW1P:
000a6e 91ed      	LD   R30,X+
000a6f 91fc      	LD   R31,X
000a70 9711      	SBIW R26,1
000a71 9508      	RET
                 
                 __GETD1P:
000a72 91ed      	LD   R30,X+
000a73 91fd      	LD   R31,X+
000a74 916d      	LD   R22,X+
000a75 917c      	LD   R23,X
000a76 9713      	SBIW R26,3
000a77 9508      	RET
                 
                 __GETD1S0:
000a78 81e8      	LD   R30,Y
000a79 81f9      	LDD  R31,Y+1
000a7a 816a      	LDD  R22,Y+2
000a7b 817b      	LDD  R23,Y+3
000a7c 9508      	RET
                 
                 __GETD2S0:
000a7d 81a8      	LD   R26,Y
000a7e 81b9      	LDD  R27,Y+1
000a7f 818a      	LDD  R24,Y+2
000a80 819b      	LDD  R25,Y+3
000a81 9508      	RET
                 
                 __PUTD1S0:
000a82 83e8      	ST   Y,R30
000a83 83f9      	STD  Y+1,R31
000a84 836a      	STD  Y+2,R22
000a85 837b      	STD  Y+3,R23
000a86 9508      	RET
                 
                 __PUTPARD1:
000a87 937a      	ST   -Y,R23
000a88 936a      	ST   -Y,R22
000a89 93fa      	ST   -Y,R31
000a8a 93ea      	ST   -Y,R30
000a8b 9508      	RET
                 
                 __PUTPARD2:
000a8c 939a      	ST   -Y,R25
000a8d 938a      	ST   -Y,R24
000a8e 93ba      	ST   -Y,R27
000a8f 93aa      	ST   -Y,R26
000a90 9508      	RET
                 
                 __SWAPD12:
000a91 2e18      	MOV  R1,R24
000a92 2f86      	MOV  R24,R22
000a93 2d61      	MOV  R22,R1
000a94 2e19      	MOV  R1,R25
000a95 2f97      	MOV  R25,R23
000a96 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000a97 2e1b      	MOV  R1,R27
000a98 2fbf      	MOV  R27,R31
000a99 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000a9a 2e1a      	MOV  R1,R26
000a9b 2fae      	MOV  R26,R30
000a9c 2de1      	MOV  R30,R1
000a9d 9508      	RET
                 
                 __CPD10:
000a9e 9730      	SBIW R30,0
000a9f 4060      	SBCI R22,0
000aa0 4070      	SBCI R23,0
000aa1 9508      	RET
                 
                 __SAVELOCR6:
000aa2 935a      	ST   -Y,R21
                 __SAVELOCR5:
000aa3 934a      	ST   -Y,R20
                 __SAVELOCR4:
000aa4 933a      	ST   -Y,R19
                 __SAVELOCR3:
000aa5 932a      	ST   -Y,R18
                 __SAVELOCR2:
000aa6 931a      	ST   -Y,R17
000aa7 930a      	ST   -Y,R16
000aa8 9508      	RET
                 
                 __LOADLOCR6:
000aa9 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000aaa 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000aab 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000aac 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000aad 8119      	LDD  R17,Y+1
000aae 8108      	LD   R16,Y
000aaf 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   5 r7 :   4 
r8 :   3 r9 :   2 r10:   4 r11:   4 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  54 r17:  95 r18:  48 r19:  36 r20:  50 r21:  90 r22: 117 r23: 103 
r24:  75 r25:  64 r26: 225 r27:  99 r28:  31 r29:   1 r30: 422 r31: 164 
x  :  42 y  : 383 z  :  24 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  33 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  53 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  72 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 239 
cbi   :  15 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  53 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  17 cpc   :  25 cpi   :  95 cpse  :   0 dec   :  15 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   2 inc   :   5 jmp   :  24 ld    :  52 ldd   : 211 ldi   : 244 
lds   :  16 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  98 movw  :  50 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  11 pop   :  22 push  :  22 rcall :  51 ret   :  98 
reti  :   0 rjmp  : 171 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   9 sbic  :   4 sbis  :  12 sbiw  :  30 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  97 std   :  78 sts   :  38 sub   :   6 subi  :  51 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 81 out of 116 (69.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001560   5410     62   5472   32768  16.7%
[.dseg] 0x000060 0x000294      0     52     52    2048   2.5%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
