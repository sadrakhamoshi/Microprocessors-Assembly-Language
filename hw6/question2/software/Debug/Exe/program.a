;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdlib.h>
;#include <stdio.h>
;#include <stdint.h>
;
;#define KEYPAD_R1 PORTD.0
;#define KEYPAD_R2 PORTD.1
;#define KEYPAD_R3 PORTD.2
;#define KEYPAD_R4 PORTD.3
;#define KEYPAD_C1 PIND.4
;#define KEYPAD_C2 PIND.5
;#define KEYPAD_C3 PIND.6
;#define KEYPAD_C4 PIND.7
;
;#define KEYPAD_MULTIPLY '*'
;#define KEYPAD_DIVISION '/'
;#define KEYPAD_ADD '+'
;#define KEYPAD_MINUS '-'
;#define KEYPAD_EQUAL '='
;#define KEYPAD_CLEAR 'C'
;
;#define KEYPAD_NUM0 '0'
;#define KEYPAD_NUM1 '1'
;#define KEYPAD_NUM2 '2'
;#define KEYPAD_NUM3 '3'
;#define KEYPAD_NUM4 '4'
;#define KEYPAD_NUM5 '5'
;#define KEYPAD_NUM6 '6'
;#define KEYPAD_NUM7 '7'
;#define KEYPAD_NUM8 '8'
;#define KEYPAD_NUM9 '9'
;
;unsigned char keypad_scan();
;
;float COMPUTE(float num1, float num2, unsigned char operation) {
; 0000 0025 float COMPUTE(float num1, float num2, unsigned char operation) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026     switch (operation)
;PCODE: $0000000F VOL: 0
;	num1 -> Y+5
;	num2 -> Y+1
;	operation -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0027         {
; 0000 0028             case KEYPAD_MULTIPLY:
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0029                 return num1 * num2;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002A             case KEYPAD_DIVISION:
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002B                 return num1 / num2;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002C             case KEYPAD_ADD:
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002D                 return num1 + num2;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002E             case KEYPAD_MINUS:
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002F                 return num1 - num2;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0030             default: break;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0031         }
;PCODE: $00000033 VOL: 0
; 0000 0032     return -1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0033 }
;PCODE: $00000037 VOL: 0
;
;
;float num0 = 0;
;float num1 = 1;

	.DSEG
;float num2 = 0;
;
;char operation0 = KEYPAD_ADD;
;char operation1 = KEYPAD_MULTIPLY;
;int operation_enter = 0;
;int equal_enter = 1;
;char buffer[32];
;
;void main(void) {
; 0000 0040 void main(void) {

	.CSEG
;PCODE: $00000038 VOL: 0
; 0000 0041     unsigned char key_res;
; 0000 0042     DDRC = 0xFF;
;	key_res -> R17
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0043     DDRD = 0x0F;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0044     PORTC = 0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0045 
; 0000 0046     lcd_init(16);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0047     lcd_clear();
;PCODE: $00000041 VOL: 0
; 0000 0048 
; 0000 0049     while (1) {
;PCODE: $00000042 VOL: 0
; 0000 004A         key_res = keypad_scan();
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 004B 
; 0000 004C         if (key_res != 255) {
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004D             while (keypad_scan() != 255);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004E             delay_ms(20);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 004F 
; 0000 0050             if (key_res == KEYPAD_CLEAR) {
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0051                 lcd_clear();
;PCODE: $00000054 VOL: 0
; 0000 0052 
; 0000 0053                 num0 = 0;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0054                 num1 = 1;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0055                 num2 = 0;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0056                 operation0 = KEYPAD_ADD;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0057                 operation1 = KEYPAD_MULTIPLY;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0058                 operation_enter = 0;
;PCODE: $0000005F VOL: 0
; 0000 0059                 equal_enter = 1;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 005A 
; 0000 005B             } else if (key_res == KEYPAD_EQUAL) {
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 005C                 if (operation_enter != 1 && equal_enter != 1) {
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 005D                     num1 = COMPUTE(num1, num2, operation1);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 005E                     num2 = 0;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 005F                     num0 = COMPUTE(num0, num1, operation0);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0060                     num1 = 0;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0061 
; 0000 0062                     sprintf(buffer, "%.2f", num0);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0063                     lcd_gotoxy(0, 1);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0064                     lcd_puts(buffer);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0065 
; 0000 0066                     num0 = 0;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0067                     num1 = 1;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0068                     num2 = 0;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0069                     operation0 = KEYPAD_ADD;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006A                     operation1 = KEYPAD_MULTIPLY;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 006B                     operation_enter = 0;
;PCODE: $0000009E VOL: 0
; 0000 006C                     equal_enter = 1;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 006D                 }
; 0000 006E 
; 0000 006F             } else if (key_res == KEYPAD_DIVISION || key_res == KEYPAD_MULTIPLY || key_res == KEYPAD_MINUS || key_res == ...
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0070                 if (operation_enter != 1 && equal_enter != 1) {
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0071                     if (key_res == KEYPAD_DIVISION || key_res == KEYPAD_MULTIPLY) {
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0072                         num1 = COMPUTE(num1, num2, operation1);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0073                         num2 = 0;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0074                         operation1 = key_res;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0075                     } else {
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0076                         num1 = COMPUTE(num1, num2, operation1);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0077                         num2 = 0;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0078                         num0 = COMPUTE(num0, num1, operation0);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0079                         num1 = 1;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 007A                         operation0 = key_res;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 007B                         operation1 = KEYPAD_MULTIPLY;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 007C                     }
;PCODE: $000000E7 VOL: 0
; 0000 007D                     lcd_putchar(key_res);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 007E                     operation_enter = 1;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 007F                 }
; 0000 0080             } else {
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0081                 if (equal_enter == 1) {
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0082                     lcd_clear();
;PCODE: $000000F2 VOL: 0
; 0000 0083                 }
; 0000 0084                 equal_enter = 0;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0085                 operation_enter = 0;
;PCODE: $000000F5 VOL: 0
; 0000 0086                 lcd_putchar(key_res);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0087 
; 0000 0088                 num2 *= 10;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0089                 num2 += key_res - 48;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 008A             }
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 008B 
; 0000 008C         }
; 0000 008D     }
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 008E }
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;
;unsigned char keypad_scan() {
; 0000 0090 unsigned char keypad_scan() {
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0091     unsigned char result = 255;
; 0000 0092 
; 0000 0093     ////////////////////////  ROW1 ////////////////////////
; 0000 0094     KEYPAD_R1 = 1;
;PCODE: $0000010E VOL: 0
;	result -> R17
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0095     KEYPAD_R2 = 0;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0096     KEYPAD_R3 = 0;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0097     KEYPAD_R4 = 0;
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0098 
; 0000 0099     delay_ms(5);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 009A     if (KEYPAD_C1)
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 009B         result = KEYPAD_NUM7;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 009C     else if (KEYPAD_C2)
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 009D         result = KEYPAD_NUM8;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 009E     else if (KEYPAD_C3)
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 009F         result = KEYPAD_NUM9;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00A0     else if (KEYPAD_C4)
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00A1         result = KEYPAD_DIVISION;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00A2 
; 0000 00A3 
; 0000 00A4     ////////////////////////  ROW2 ////////////////////////
; 0000 00A5     KEYPAD_R1 = 0;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00A6     KEYPAD_R2 = 1;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00A7     KEYPAD_R3 = 0;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00A8     KEYPAD_R4 = 0;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00A9 
; 0000 00AA     delay_ms(5);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00AB     if (KEYPAD_C1)
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00AC         result = KEYPAD_NUM4;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00AD     else if (KEYPAD_C2)
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00AE         result = KEYPAD_NUM5;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00AF     else if (KEYPAD_C3)
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00B0         result = KEYPAD_NUM6;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00B1     else if (KEYPAD_C4)
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00B2         result = KEYPAD_MULTIPLY;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00B3     ////////////////////////  ROW3 ////////////////////////
; 0000 00B4     KEYPAD_R1 = 0;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00B5     KEYPAD_R2 = 0;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00B6     KEYPAD_R3 = 1;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00B7     KEYPAD_R4 = 0;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00B8 
; 0000 00B9     delay_ms(5);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00BA     if (KEYPAD_C1)
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00BB         result = KEYPAD_NUM1;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00BC     else if (KEYPAD_C2)
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00BD         result = KEYPAD_NUM2;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00BE     else if (KEYPAD_C3)
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00BF         result = KEYPAD_NUM3;
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00C0     else if (KEYPAD_C4)
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00C1         result = KEYPAD_MINUS;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00C2     ////////////////////////  ROW4 ////////////////////////
; 0000 00C3     KEYPAD_R1 = 0;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00C4     KEYPAD_R2 = 0;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00C5     KEYPAD_R3 = 0;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00C6     KEYPAD_R4 = 1;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00C7 
; 0000 00C8     delay_ms(5);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00C9     if (KEYPAD_C1)
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00CA         result = KEYPAD_CLEAR;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00CB     else if (KEYPAD_C2)
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 00CC         result = KEYPAD_NUM0;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 00CD     else if (KEYPAD_C3)
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00CE         result = KEYPAD_EQUAL;
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00CF     else if (KEYPAD_C4)
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00D0         result = KEYPAD_ADD;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00D1 
; 0000 00D2     return result;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00D3 }
;PCODE: $000001B8 VOL: 0
